{
	"swagger": "2.0",
	"info": {
		"description": "The Ping Identity Data Governance Broker REST APIs allow OAuth2 clients to retrieve and update resources as well as manage user passwords, account state, OAuth2 consents, and external identity links for login. These APIs are based on the SCIM 2.0 Protocol (RFC7644).",
		"version": "2.0",
		"title": "API Explorer"
	},
	"basePath": "/scim/v2",
	"tags": [{
		"name": "Authenticated Identity",
		"description": "Operations on the user of the access token currently in use",
		"externalDocs": {
			"description": "\"/Me\" Authenticated Subject Alias",
			"url": "https://tools.ietf.org/html/rfc7644#section-3.11"
		}
	}, {
		"name": "Account Management",
		"description": "Management of a user's account"
	}, {
		"name": "Password Management",
		"description": "Updating and recovery of password credentials"
	}, {
		"name": "OAuth2 Consent",
		"description": "Management of user consents for OAuth2 clients"
	}, {
		"name": "External Identity",
		"description": "External identity link management for log in through external identity providers"
	}, {
		"name": "Session",
		"description": "Management of session data"
	}, {
		"name": "Telephony Validation",
		"description": "Delivery of verification codes to phone numbers"
	}, {
		"name": "Email Validation",
		"description": "Delivery of verification codes to email addresses"
	}, {
		"name": "OBAccounts Resource Type",
		"description": "Operations on the OBAccounts resource type"
	}, {
		"name": "OBThirdPartyProviders Resource Type",
		"description": "Operations on the OBThirdPartyProviders resource type"
	}, {
		"name": "OBAccountPaymentServiceProviders Resource Type",
		"description": "Operations on the OBAccountPaymentServiceProviders resource type"
	}, {
		"name": "OBAuthorities Resource Type",
		"description": "Operations on the OBAuthorities resource type"
	}],
	"consumes": ["application/scim+json"],
	"produces": ["application/scim+json"],
	"paths": {
		"/OBAccountPaymentServiceProviders": {
			"get": {
				"tags": ["OBAccountPaymentServiceProviders Resource Type"],
				"summary": "Search for one or more resources",
				"parameters": [{
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OBAccountPaymentServiceProviders"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Query Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.2"
				}
			},
			"post": {
				"tags": ["OBAccountPaymentServiceProviders Resource Type"],
				"summary": "Create a new resource",
				"description": "Read only attributes included in the request body will be ignored.",
				"parameters": [{
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The resource to create",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OBAccountPaymentServiceProviders"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"201": {
						"description": "The resource was successfully created and the newly created resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAccountPaymentServiceProviders"
						}
					},
					"204": {
						"description": "The resource was successfully created but the access token scopes do not have permissions to retrieve the newly created resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Creating Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.3"
				}
			}
		},
		"/OBAccountPaymentServiceProviders/.search": {
			"post": {
				"tags": ["OBAccountPaymentServiceProviders Resource Type"],
				"summary": "Search for one or more resources using HTTP POST",
				"description": "Useful for executing searches without passing parameters that may contain sensitive information on the URL.",
				"parameters": [{
					"in": "body",
					"name": "SCIM 2.0 Search Request Message",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Search Request"
					}
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OBAccountPaymentServiceProviders"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Querying Resources Using HTTP POST",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.3"
				}
			}
		},
		"/OBAccountPaymentServiceProviders/{id}": {
			"get": {
				"tags": ["OBAccountPaymentServiceProviders Resource Type"],
				"summary": "Retrieve the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The retrieved resource is included in the response body",
						"schema": {
							"$ref": "#/definitions/OBAccountPaymentServiceProviders"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Retrieving a Known Resource",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.1"
				}
			},
			"put": {
				"tags": ["OBAccountPaymentServiceProviders Resource Type"],
				"summary": "Replace all attributes of the resource",
				"description": "Read only attributes included in the request body will be ignored. Attributes omitted from the request body will be assumed to be not asserted by the client and will not be modified.",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The resource containing attributes to replace",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OBAccountPaymentServiceProviders"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The resource was successfully modified and the updated resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAccountPaymentServiceProviders"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully modified but the access token scopes doesn't have permissions to retrieve the updated resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Replacing with PUT",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.5.1"
				}
			},
			"delete": {
				"tags": ["OBAccountPaymentServiceProviders Resource Type"],
				"summary": "Delete the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully deleted."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Deleting Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.6"
				}
			},
			"patch": {
				"tags": ["OBAccountPaymentServiceProviders Resource Type"],
				"summary": "Update one or more attributes of the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Patch Request Message",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Patch Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The resource was successfully modified and the updated resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAccountPaymentServiceProviders"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully modified but the access token scopes doesn't have permissions to retrieve the updated resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Modifying with PATCH",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.5.2"
				}
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/account": {
			"get": {
				"tags": ["Account Management"],
				"summary": "Retrieves the user's account state",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"200": {
						"description": "The account state response",
						"schema": {
							"$ref": "#/definitions/Account State"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Account Management"],
				"summary": "Updates the user's account state",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "Account State Resource",
					"description": "The updated account state",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Account State"
					}
				}],
				"responses": {
					"200": {
						"description": "The account state response",
						"schema": {
							"$ref": "#/definitions/Account State"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/consentHistory": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Search the user's history of consent events for OAuth2 clients",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OAuth2 Consent History"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/consentHistory/{eventId}": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Retrieves a known historical consent event for an OAuth2 client",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "eventId",
					"in": "path",
					"description": "The ID of the historical consent event",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The consent history resource",
						"schema": {
							"$ref": "#/definitions/OAuth2 Consent History"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/consents": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Search for consents granted to OAuth2 clients by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OAuth2 Consent"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/consents/{clientName}": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Retrieves the consents granted to OAuth2 client by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "clientName",
					"in": "path",
					"description": "The name of the OAuth2 client",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The consent resource",
						"schema": {
							"$ref": "#/definitions/OAuth2 Consent"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["OAuth2 Consent"],
				"summary": "Revokes the consents granted to an OAuth2 client by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "clientName",
					"in": "path",
					"description": "The name of the OAuth2 client",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The consent for the OAuth2 client was successfully revoked"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/externalIdentities": {
			"get": {
				"tags": ["External Identity"],
				"summary": "Search for external identity providers the user may use to log in",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/External Identity"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/externalIdentities/{providerName}": {
			"get": {
				"tags": ["External Identity"],
				"summary": "Retrieves the external identity provider the user may use to log in",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "providerName",
					"in": "path",
					"description": "The name of the external identity provider",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The external identity resource",
						"schema": {
							"$ref": "#/definitions/External Identity"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["External Identity"],
				"summary": "Removes the link to the external identity provider",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "providerName",
					"in": "path",
					"description": "The name of the external identity provider",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The link to the external identity provider was successfully removed"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/password": {
			"put": {
				"tags": ["Password Management"],
				"summary": "Updates a user's password by specifying an old and new password",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "Password Update Request Message",
					"description": "The password update request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Password Update Request"
					}
				}],
				"responses": {
					"200": {
						"description": "The password was successfully reset to the generated value in the response",
						"schema": {
							"$ref": "#/definitions/Password Update Response"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Password Update Error Response"
						}
					},
					"204": {
						"description": "The password was successfully updated to the new password provided in the request"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/passwordQualityRequirements": {
			"get": {
				"tags": ["Password Management"],
				"summary": "Retrieves the password quality requirements for user password updates",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"200": {
						"description": "The password quality requirement response",
						"schema": {
							"$ref": "#/definitions/Password Quality Requirement Response"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/sessions": {
			"get": {
				"tags": ["Session"],
				"summary": "Search for the user's current sessions",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Session"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/sessions/{sessionId}": {
			"get": {
				"tags": ["Session"],
				"summary": "Retrieves a user's current session",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "sessionId",
					"in": "path",
					"description": "The id of the session",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The session resource",
						"schema": {
							"$ref": "#/definitions/Session"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["Session"],
				"summary": "Ends the session and revokes associated tokens",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "sessionId",
					"in": "path",
					"description": "The id of the session",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The session was successfully removed"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/validatedEmailAddresses": {
			"get": {
				"tags": ["Email Validation"],
				"summary": "Search for validated email addresses",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Email Validation Request"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"post": {
				"tags": ["Email Validation"],
				"summary": "Create a validation request",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation request to initiate",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Email Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/validatedEmailAddresses/{validationId}": {
			"get": {
				"tags": ["Email Validation"],
				"summary": "Retrieves a validated email address",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Email Validation"],
				"summary": "Validates an email address",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation code confirmation request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Email Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/validatedPhoneNumbers": {
			"get": {
				"tags": ["Telephony Validation"],
				"summary": "Search for validated phone numbers",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Telephony Validation Request"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"post": {
				"tags": ["Telephony Validation"],
				"summary": "Create a validation request",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation request to initiate",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Telephony Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccountPaymentServiceProviders/{id}/validatedPhoneNumbers/{validationId}": {
			"get": {
				"tags": ["Telephony Validation"],
				"summary": "Retrieves a validated phone number",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Telephony Validation"],
				"summary": "Validates a phone number",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation code confirmation request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Telephony Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts": {
			"get": {
				"tags": ["OBAccounts Resource Type"],
				"summary": "Search for one or more resources",
				"parameters": [{
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OBAccounts"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Query Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.2"
				}
			},
			"post": {
				"tags": ["OBAccounts Resource Type"],
				"summary": "Create a new resource",
				"description": "Read only attributes included in the request body will be ignored.",
				"parameters": [{
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The resource to create",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OBAccounts"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"201": {
						"description": "The resource was successfully created and the newly created resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAccounts"
						}
					},
					"204": {
						"description": "The resource was successfully created but the access token scopes do not have permissions to retrieve the newly created resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Creating Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.3"
				}
			}
		},
		"/OBAccounts/.search": {
			"post": {
				"tags": ["OBAccounts Resource Type"],
				"summary": "Search for one or more resources using HTTP POST",
				"description": "Useful for executing searches without passing parameters that may contain sensitive information on the URL.",
				"parameters": [{
					"in": "body",
					"name": "SCIM 2.0 Search Request Message",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Search Request"
					}
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OBAccounts"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Querying Resources Using HTTP POST",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.3"
				}
			}
		},
		"/OBAccounts/{id}": {
			"get": {
				"tags": ["OBAccounts Resource Type"],
				"summary": "Retrieve the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The retrieved resource is included in the response body",
						"schema": {
							"$ref": "#/definitions/OBAccounts"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Retrieving a Known Resource",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.1"
				}
			},
			"put": {
				"tags": ["OBAccounts Resource Type"],
				"summary": "Replace all attributes of the resource",
				"description": "Read only attributes included in the request body will be ignored. Attributes omitted from the request body will be assumed to be not asserted by the client and will not be modified.",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The resource containing attributes to replace",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OBAccounts"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The resource was successfully modified and the updated resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAccounts"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully modified but the access token scopes doesn't have permissions to retrieve the updated resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Replacing with PUT",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.5.1"
				}
			},
			"delete": {
				"tags": ["OBAccounts Resource Type"],
				"summary": "Delete the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully deleted."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Deleting Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.6"
				}
			},
			"patch": {
				"tags": ["OBAccounts Resource Type"],
				"summary": "Update one or more attributes of the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Patch Request Message",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Patch Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The resource was successfully modified and the updated resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAccounts"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully modified but the access token scopes doesn't have permissions to retrieve the updated resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Modifying with PATCH",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.5.2"
				}
			}
		},
		"/OBAccounts/{id}/account": {
			"get": {
				"tags": ["Account Management"],
				"summary": "Retrieves the user's account state",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"200": {
						"description": "The account state response",
						"schema": {
							"$ref": "#/definitions/Account State"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Account Management"],
				"summary": "Updates the user's account state",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "Account State Resource",
					"description": "The updated account state",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Account State"
					}
				}],
				"responses": {
					"200": {
						"description": "The account state response",
						"schema": {
							"$ref": "#/definitions/Account State"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/consentHistory": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Search the user's history of consent events for OAuth2 clients",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OAuth2 Consent History"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/consentHistory/{eventId}": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Retrieves a known historical consent event for an OAuth2 client",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "eventId",
					"in": "path",
					"description": "The ID of the historical consent event",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The consent history resource",
						"schema": {
							"$ref": "#/definitions/OAuth2 Consent History"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/consents": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Search for consents granted to OAuth2 clients by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OAuth2 Consent"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/consents/{clientName}": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Retrieves the consents granted to OAuth2 client by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "clientName",
					"in": "path",
					"description": "The name of the OAuth2 client",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The consent resource",
						"schema": {
							"$ref": "#/definitions/OAuth2 Consent"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["OAuth2 Consent"],
				"summary": "Revokes the consents granted to an OAuth2 client by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "clientName",
					"in": "path",
					"description": "The name of the OAuth2 client",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The consent for the OAuth2 client was successfully revoked"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/externalIdentities": {
			"get": {
				"tags": ["External Identity"],
				"summary": "Search for external identity providers the user may use to log in",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/External Identity"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/externalIdentities/{providerName}": {
			"get": {
				"tags": ["External Identity"],
				"summary": "Retrieves the external identity provider the user may use to log in",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "providerName",
					"in": "path",
					"description": "The name of the external identity provider",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The external identity resource",
						"schema": {
							"$ref": "#/definitions/External Identity"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["External Identity"],
				"summary": "Removes the link to the external identity provider",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "providerName",
					"in": "path",
					"description": "The name of the external identity provider",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The link to the external identity provider was successfully removed"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/password": {
			"put": {
				"tags": ["Password Management"],
				"summary": "Updates a user's password by specifying an old and new password",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "Password Update Request Message",
					"description": "The password update request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Password Update Request"
					}
				}],
				"responses": {
					"200": {
						"description": "The password was successfully reset to the generated value in the response",
						"schema": {
							"$ref": "#/definitions/Password Update Response"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Password Update Error Response"
						}
					},
					"204": {
						"description": "The password was successfully updated to the new password provided in the request"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/passwordQualityRequirements": {
			"get": {
				"tags": ["Password Management"],
				"summary": "Retrieves the password quality requirements for user password updates",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"200": {
						"description": "The password quality requirement response",
						"schema": {
							"$ref": "#/definitions/Password Quality Requirement Response"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/sessions": {
			"get": {
				"tags": ["Session"],
				"summary": "Search for the user's current sessions",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Session"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/sessions/{sessionId}": {
			"get": {
				"tags": ["Session"],
				"summary": "Retrieves a user's current session",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "sessionId",
					"in": "path",
					"description": "The id of the session",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The session resource",
						"schema": {
							"$ref": "#/definitions/Session"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["Session"],
				"summary": "Ends the session and revokes associated tokens",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "sessionId",
					"in": "path",
					"description": "The id of the session",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The session was successfully removed"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/validatedEmailAddresses": {
			"get": {
				"tags": ["Email Validation"],
				"summary": "Search for validated email addresses",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Email Validation Request"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"post": {
				"tags": ["Email Validation"],
				"summary": "Create a validation request",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation request to initiate",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Email Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/validatedEmailAddresses/{validationId}": {
			"get": {
				"tags": ["Email Validation"],
				"summary": "Retrieves a validated email address",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Email Validation"],
				"summary": "Validates an email address",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation code confirmation request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Email Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/validatedPhoneNumbers": {
			"get": {
				"tags": ["Telephony Validation"],
				"summary": "Search for validated phone numbers",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Telephony Validation Request"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"post": {
				"tags": ["Telephony Validation"],
				"summary": "Create a validation request",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation request to initiate",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Telephony Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAccounts/{id}/validatedPhoneNumbers/{validationId}": {
			"get": {
				"tags": ["Telephony Validation"],
				"summary": "Retrieves a validated phone number",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Telephony Validation"],
				"summary": "Validates a phone number",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation code confirmation request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Telephony Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities": {
			"get": {
				"tags": ["OBAuthorities Resource Type"],
				"summary": "Search for one or more resources",
				"parameters": [{
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OBAuthorities"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Query Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.2"
				}
			},
			"post": {
				"tags": ["OBAuthorities Resource Type"],
				"summary": "Create a new resource",
				"description": "Read only attributes included in the request body will be ignored.",
				"parameters": [{
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The resource to create",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OBAuthorities"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"201": {
						"description": "The resource was successfully created and the newly created resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAuthorities"
						}
					},
					"204": {
						"description": "The resource was successfully created but the access token scopes do not have permissions to retrieve the newly created resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Creating Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.3"
				}
			}
		},
		"/OBAuthorities/.search": {
			"post": {
				"tags": ["OBAuthorities Resource Type"],
				"summary": "Search for one or more resources using HTTP POST",
				"description": "Useful for executing searches without passing parameters that may contain sensitive information on the URL.",
				"parameters": [{
					"in": "body",
					"name": "SCIM 2.0 Search Request Message",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Search Request"
					}
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OBAuthorities"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Querying Resources Using HTTP POST",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.3"
				}
			}
		},
		"/OBAuthorities/{id}": {
			"get": {
				"tags": ["OBAuthorities Resource Type"],
				"summary": "Retrieve the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The retrieved resource is included in the response body",
						"schema": {
							"$ref": "#/definitions/OBAuthorities"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Retrieving a Known Resource",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.1"
				}
			},
			"put": {
				"tags": ["OBAuthorities Resource Type"],
				"summary": "Replace all attributes of the resource",
				"description": "Read only attributes included in the request body will be ignored. Attributes omitted from the request body will be assumed to be not asserted by the client and will not be modified.",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The resource containing attributes to replace",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OBAuthorities"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The resource was successfully modified and the updated resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAuthorities"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully modified but the access token scopes doesn't have permissions to retrieve the updated resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Replacing with PUT",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.5.1"
				}
			},
			"delete": {
				"tags": ["OBAuthorities Resource Type"],
				"summary": "Delete the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully deleted."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Deleting Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.6"
				}
			},
			"patch": {
				"tags": ["OBAuthorities Resource Type"],
				"summary": "Update one or more attributes of the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Patch Request Message",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Patch Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The resource was successfully modified and the updated resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBAuthorities"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully modified but the access token scopes doesn't have permissions to retrieve the updated resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Modifying with PATCH",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.5.2"
				}
			}
		},
		"/OBAuthorities/{id}/account": {
			"get": {
				"tags": ["Account Management"],
				"summary": "Retrieves the user's account state",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"200": {
						"description": "The account state response",
						"schema": {
							"$ref": "#/definitions/Account State"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Account Management"],
				"summary": "Updates the user's account state",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "Account State Resource",
					"description": "The updated account state",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Account State"
					}
				}],
				"responses": {
					"200": {
						"description": "The account state response",
						"schema": {
							"$ref": "#/definitions/Account State"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/consentHistory": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Search the user's history of consent events for OAuth2 clients",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OAuth2 Consent History"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/consentHistory/{eventId}": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Retrieves a known historical consent event for an OAuth2 client",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "eventId",
					"in": "path",
					"description": "The ID of the historical consent event",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The consent history resource",
						"schema": {
							"$ref": "#/definitions/OAuth2 Consent History"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/consents": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Search for consents granted to OAuth2 clients by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OAuth2 Consent"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/consents/{clientName}": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Retrieves the consents granted to OAuth2 client by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "clientName",
					"in": "path",
					"description": "The name of the OAuth2 client",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The consent resource",
						"schema": {
							"$ref": "#/definitions/OAuth2 Consent"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["OAuth2 Consent"],
				"summary": "Revokes the consents granted to an OAuth2 client by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "clientName",
					"in": "path",
					"description": "The name of the OAuth2 client",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The consent for the OAuth2 client was successfully revoked"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/externalIdentities": {
			"get": {
				"tags": ["External Identity"],
				"summary": "Search for external identity providers the user may use to log in",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/External Identity"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/externalIdentities/{providerName}": {
			"get": {
				"tags": ["External Identity"],
				"summary": "Retrieves the external identity provider the user may use to log in",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "providerName",
					"in": "path",
					"description": "The name of the external identity provider",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The external identity resource",
						"schema": {
							"$ref": "#/definitions/External Identity"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["External Identity"],
				"summary": "Removes the link to the external identity provider",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "providerName",
					"in": "path",
					"description": "The name of the external identity provider",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The link to the external identity provider was successfully removed"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/password": {
			"put": {
				"tags": ["Password Management"],
				"summary": "Updates a user's password by specifying an old and new password",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "Password Update Request Message",
					"description": "The password update request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Password Update Request"
					}
				}],
				"responses": {
					"200": {
						"description": "The password was successfully reset to the generated value in the response",
						"schema": {
							"$ref": "#/definitions/Password Update Response"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Password Update Error Response"
						}
					},
					"204": {
						"description": "The password was successfully updated to the new password provided in the request"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/passwordQualityRequirements": {
			"get": {
				"tags": ["Password Management"],
				"summary": "Retrieves the password quality requirements for user password updates",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"200": {
						"description": "The password quality requirement response",
						"schema": {
							"$ref": "#/definitions/Password Quality Requirement Response"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/sessions": {
			"get": {
				"tags": ["Session"],
				"summary": "Search for the user's current sessions",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Session"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/sessions/{sessionId}": {
			"get": {
				"tags": ["Session"],
				"summary": "Retrieves a user's current session",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "sessionId",
					"in": "path",
					"description": "The id of the session",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The session resource",
						"schema": {
							"$ref": "#/definitions/Session"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["Session"],
				"summary": "Ends the session and revokes associated tokens",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "sessionId",
					"in": "path",
					"description": "The id of the session",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The session was successfully removed"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/validatedEmailAddresses": {
			"get": {
				"tags": ["Email Validation"],
				"summary": "Search for validated email addresses",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Email Validation Request"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"post": {
				"tags": ["Email Validation"],
				"summary": "Create a validation request",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation request to initiate",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Email Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/validatedEmailAddresses/{validationId}": {
			"get": {
				"tags": ["Email Validation"],
				"summary": "Retrieves a validated email address",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Email Validation"],
				"summary": "Validates an email address",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation code confirmation request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Email Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/validatedPhoneNumbers": {
			"get": {
				"tags": ["Telephony Validation"],
				"summary": "Search for validated phone numbers",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Telephony Validation Request"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"post": {
				"tags": ["Telephony Validation"],
				"summary": "Create a validation request",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation request to initiate",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Telephony Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBAuthorities/{id}/validatedPhoneNumbers/{validationId}": {
			"get": {
				"tags": ["Telephony Validation"],
				"summary": "Retrieves a validated phone number",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Telephony Validation"],
				"summary": "Validates a phone number",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation code confirmation request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Telephony Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders": {
			"get": {
				"tags": ["OBThirdPartyProviders Resource Type"],
				"summary": "Search for one or more resources",
				"parameters": [{
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OBThirdPartyProviders"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Query Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.2"
				}
			},
			"post": {
				"tags": ["OBThirdPartyProviders Resource Type"],
				"summary": "Create a new resource",
				"description": "Read only attributes included in the request body will be ignored.",
				"parameters": [{
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The resource to create",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OBThirdPartyProviders"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"201": {
						"description": "The resource was successfully created and the newly created resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBThirdPartyProviders"
						}
					},
					"204": {
						"description": "The resource was successfully created but the access token scopes do not have permissions to retrieve the newly created resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Creating Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.3"
				}
			}
		},
		"/OBThirdPartyProviders/.search": {
			"post": {
				"tags": ["OBThirdPartyProviders Resource Type"],
				"summary": "Search for one or more resources using HTTP POST",
				"description": "Useful for executing searches without passing parameters that may contain sensitive information on the URL.",
				"parameters": [{
					"in": "body",
					"name": "SCIM 2.0 Search Request Message",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Search Request"
					}
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OBThirdPartyProviders"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Querying Resources Using HTTP POST",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.3"
				}
			}
		},
		"/OBThirdPartyProviders/{id}": {
			"get": {
				"tags": ["OBThirdPartyProviders Resource Type"],
				"summary": "Retrieve the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The retrieved resource is included in the response body",
						"schema": {
							"$ref": "#/definitions/OBThirdPartyProviders"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Retrieving a Known Resource",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.4.1"
				}
			},
			"put": {
				"tags": ["OBThirdPartyProviders Resource Type"],
				"summary": "Replace all attributes of the resource",
				"description": "Read only attributes included in the request body will be ignored. Attributes omitted from the request body will be assumed to be not asserted by the client and will not be modified.",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The resource containing attributes to replace",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OBThirdPartyProviders"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The resource was successfully modified and the updated resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBThirdPartyProviders"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully modified but the access token scopes doesn't have permissions to retrieve the updated resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Replacing with PUT",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.5.1"
				}
			},
			"delete": {
				"tags": ["OBThirdPartyProviders Resource Type"],
				"summary": "Delete the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully deleted."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Deleting Resources",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.6"
				}
			},
			"patch": {
				"tags": ["OBThirdPartyProviders Resource Type"],
				"summary": "Update one or more attributes of the resource",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Patch Request Message",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Patch Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The resource was successfully modified and the updated resource is included in the response body.",
						"schema": {
							"$ref": "#/definitions/OBThirdPartyProviders"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The resource was successfully modified but the access token scopes doesn't have permissions to retrieve the updated resource."
					}
				},
				"security": [{
					"oauth2": []
				}],
				"externalDocs": {
					"description": "Modifying with PATCH",
					"url": "https://tools.ietf.org/html/rfc7644#section-3.5.2"
				}
			}
		},
		"/OBThirdPartyProviders/{id}/account": {
			"get": {
				"tags": ["Account Management"],
				"summary": "Retrieves the user's account state",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"200": {
						"description": "The account state response",
						"schema": {
							"$ref": "#/definitions/Account State"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Account Management"],
				"summary": "Updates the user's account state",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "Account State Resource",
					"description": "The updated account state",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Account State"
					}
				}],
				"responses": {
					"200": {
						"description": "The account state response",
						"schema": {
							"$ref": "#/definitions/Account State"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/consentHistory": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Search the user's history of consent events for OAuth2 clients",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OAuth2 Consent History"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/consentHistory/{eventId}": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Retrieves a known historical consent event for an OAuth2 client",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "eventId",
					"in": "path",
					"description": "The ID of the historical consent event",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The consent history resource",
						"schema": {
							"$ref": "#/definitions/OAuth2 Consent History"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/consents": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Search for consents granted to OAuth2 clients by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/OAuth2 Consent"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/consents/{clientName}": {
			"get": {
				"tags": ["OAuth2 Consent"],
				"summary": "Retrieves the consents granted to OAuth2 client by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "clientName",
					"in": "path",
					"description": "The name of the OAuth2 client",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The consent resource",
						"schema": {
							"$ref": "#/definitions/OAuth2 Consent"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["OAuth2 Consent"],
				"summary": "Revokes the consents granted to an OAuth2 client by the user",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "clientName",
					"in": "path",
					"description": "The name of the OAuth2 client",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The consent for the OAuth2 client was successfully revoked"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/externalIdentities": {
			"get": {
				"tags": ["External Identity"],
				"summary": "Search for external identity providers the user may use to log in",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/External Identity"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/externalIdentities/{providerName}": {
			"get": {
				"tags": ["External Identity"],
				"summary": "Retrieves the external identity provider the user may use to log in",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "providerName",
					"in": "path",
					"description": "The name of the external identity provider",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The external identity resource",
						"schema": {
							"$ref": "#/definitions/External Identity"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["External Identity"],
				"summary": "Removes the link to the external identity provider",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "providerName",
					"in": "path",
					"description": "The name of the external identity provider",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The link to the external identity provider was successfully removed"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/password": {
			"put": {
				"tags": ["Password Management"],
				"summary": "Updates a user's password by specifying an old and new password",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "Password Update Request Message",
					"description": "The password update request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Password Update Request"
					}
				}],
				"responses": {
					"200": {
						"description": "The password was successfully reset to the generated value in the response",
						"schema": {
							"$ref": "#/definitions/Password Update Response"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Password Update Error Response"
						}
					},
					"204": {
						"description": "The password was successfully updated to the new password provided in the request"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/passwordQualityRequirements": {
			"get": {
				"tags": ["Password Management"],
				"summary": "Retrieves the password quality requirements for user password updates",
				"parameters": [{
					"$ref": "#/parameters/id"
				}],
				"responses": {
					"200": {
						"description": "The password quality requirement response",
						"schema": {
							"$ref": "#/definitions/Password Quality Requirement Response"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/sessions": {
			"get": {
				"tags": ["Session"],
				"summary": "Search for the user's current sessions",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Session"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/sessions/{sessionId}": {
			"get": {
				"tags": ["Session"],
				"summary": "Retrieves a user's current session",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "sessionId",
					"in": "path",
					"description": "The id of the session",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The session resource",
						"schema": {
							"$ref": "#/definitions/Session"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"delete": {
				"tags": ["Session"],
				"summary": "Ends the session and revokes associated tokens",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "sessionId",
					"in": "path",
					"description": "The id of the session",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					},
					"204": {
						"description": "The session was successfully removed"
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/validatedEmailAddresses": {
			"get": {
				"tags": ["Email Validation"],
				"summary": "Search for validated email addresses",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Email Validation Request"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"post": {
				"tags": ["Email Validation"],
				"summary": "Create a validation request",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation request to initiate",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Email Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/validatedEmailAddresses/{validationId}": {
			"get": {
				"tags": ["Email Validation"],
				"summary": "Retrieves a validated email address",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Email Validation"],
				"summary": "Validates an email address",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation code confirmation request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Email Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Email Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/validatedPhoneNumbers": {
			"get": {
				"tags": ["Telephony Validation"],
				"summary": "Search for validated phone numbers",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}, {
					"$ref": "#/parameters/filter"
				}, {
					"$ref": "#/parameters/sortBy"
				}, {
					"$ref": "#/parameters/sortOrder"
				}, {
					"$ref": "#/parameters/startIndex"
				}, {
					"$ref": "#/parameters/count"
				}],
				"responses": {
					"200": {
						"description": "SCIM 2.0 List Response Message",
						"schema": {
							"type": "object",
							"properties": {
								"Resources": {
									"type": "array",
									"description": "A multi-valued list of complex objects containing the requested resources.",
									"items": {
										"$ref": "#/definitions/Telephony Validation Request"
									}
								},
								"itemsPerPage": {
									"type": "integer",
									"format": "int32",
									"description": "The number of resources returned in a list response page."
								},
								"schemas": {
									"type": "array",
									"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
									"uniqueItems": true,
									"items": {
										"type": "string",
										"format": "urn",
										"enum": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
										"default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
									}
								},
								"startIndex": {
									"type": "integer",
									"format": "int32",
									"description": "The 1-based index of the first result in the current set of list results."
								},
								"totalResults": {
									"type": "integer",
									"format": "int32",
									"description": "The total number of results returned by the list or query operation."
								}
							}
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"post": {
				"tags": ["Telephony Validation"],
				"summary": "Create a validation request",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation request to initiate",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Telephony Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		},
		"/OBThirdPartyProviders/{id}/validatedPhoneNumbers/{validationId}": {
			"get": {
				"tags": ["Telephony Validation"],
				"summary": "Retrieves a validated phone number",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			},
			"put": {
				"tags": ["Telephony Validation"],
				"summary": "Validates a phone number",
				"parameters": [{
					"$ref": "#/parameters/id"
				}, {
					"name": "validationId",
					"in": "path",
					"description": "Validation state id",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "SCIM 2.0 Resource",
					"description": "The validation code confirmation request",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Telephony Validation Request"
					}
				}, {
					"$ref": "#/parameters/attributes"
				}, {
					"$ref": "#/parameters/excludedAttributes"
				}],
				"responses": {
					"200": {
						"description": "The validation request",
						"schema": {
							"$ref": "#/definitions/Telephony Validation Request"
						}
					},
					"default": {
						"description": "An error occurred while executing the operation",
						"schema": {
							"$ref": "#/definitions/Error Response"
						}
					}
				},
				"security": [{
					"oauth2": []
				}]
			}
		}
	},
	"securityDefinitions": {
		"oauth2": {
			"type": "oauth2",
			"authorizationUrl": "https://dev3-pdgadmin.openbanking.xyz/oauth/authorize",
			"flow": "implicit",
			"scopes": {
				"AccountsReadAccess": "Read access to technical contacts account records",
				"TPPReadAll": "Scope to all read all TPP attributes",
				"ASPSPReadAccess": "Read access on ASPSP OBAccountPaymentServiceProviders dtatbase",
				"AuthoritiesFullAccess": "Full access to Authority entry",
				"TPPReadAccess": "Search on OBThirdPartyProviders for OrganisationId and return TPP record",
				"openid": "OpenID Connect required scope.",
				"TPPFullAccess": "Full access to the third party provider entries",
				"ASPSPManage": "Manages an ASPSP Entry.",
				"ASPSPFullAccess": "Full access to Account Service Payment Service Provider entries",
				"AccountsFullAccess": "Allow full access to technical contacts account records",
				"TPPManage": "Manage TPP Account",
				"ASPSPReadAll": "Scope to allow read all of the ASPSP resource",
				"AccountsCreate": "Allows user to create account",
				"offline_access": "OpenID Connect standard scope for obtaining a refresh token. Per OpenID Connect specifications, clients must include a prompt parameter value of \"consent\" or this scope will be ignored.",
				"AuthoritiesReadAccess": "Read access to the OBAuthorities resource"
			},
			"x-clients": {}
		}
	},
	"definitions": {
		"Error Response": {
			"required": ["schemas", "status"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:ietf:params:scim:api:messages:2.0:Error"],
						"default": "urn:ietf:params:scim:api:messages:2.0:Error"
					}
				},
				"status": {
					"type": "string",
					"description": "The HTTP status code (see Section 6 [RFC7231]) expressed as a JSON String.",
					"readOnly": true
				},
				"scimType": {
					"type": "string",
					"description": "A SCIM detailed error keyword."
				},
				"detail": {
					"type": "string",
					"description": "A detailed, human readable message."
				}
			},
			"externalDocs": {
				"description": "HTTP Status and Error Response Handling",
				"url": "https://tools.ietf.org/html/rfc7644#section-3.12"
			}
		},
		"Password Update Response": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:PasswordUpdateResponse"],
						"default": "urn:pingidentity:scim:api:messages:2.0:PasswordUpdateResponse"
					}
				},
				"generatedPassword": {
					"type": "string",
					"description": "The password generated during the password update operation."
				}
			},
			"description": "Information about the results of a password update operation"
		},
		"Account State": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:schemas:2.0:AccountState"],
						"default": "urn:pingidentity:schemas:2.0:AccountState"
					}
				},
				"accountDisabled": {
					"type": "boolean",
					"description": "True if the account is disabled, or false if not.  Set to null to clear."
				},
				"accountExpirationTime": {
					"type": "string",
					"format": "date-time",
					"description": "Time of account expiration. Set to null to clear."
				},
				"secondsUntilAccountExpiration": {
					"type": "integer",
					"format": "int32",
					"description": "Seconds until account is expired."
				},
				"passwordChangedTime": {
					"type": "string",
					"format": "date-time",
					"description": "Password changed time. Set to null to clear."
				},
				"passwordExpirationWarnedTime": {
					"type": "string",
					"format": "date-time",
					"description": "Password expiration warned time. Set to null to clear."
				},
				"secondsUntilPasswordExpiration": {
					"type": "integer",
					"format": "int32",
					"description": "Seconds until password will expire.",
					"readOnly": true
				},
				"authenticationFailureTimes": {
					"type": "array",
					"description": "The date and time of previous authentication failures.",
					"items": {
						"type": "string",
						"format": "date-time"
					}
				},
				"secondsUntilAuthenticationFailureUnlock": {
					"type": "integer",
					"format": "int32",
					"description": "Seconds until authentication failure unlock.",
					"readOnly": true
				},
				"remainingAuthenticationFailureCount": {
					"type": "integer",
					"format": "int32",
					"description": "Remaining authentication failure count.",
					"readOnly": true
				},
				"lastLoginTime": {
					"type": "string",
					"format": "date-time",
					"description": "Last login time. Set to null to clear."
				},
				"secondsUntilIdleLockout": {
					"type": "integer",
					"format": "int32",
					"description": "Seconds until idle lockout.",
					"readOnly": true
				},
				"mustChangePassword": {
					"type": "boolean",
					"description": "Must change password.",
					"readOnly": true
				},
				"secondsUntilPasswordResetLockout": {
					"type": "integer",
					"format": "int32",
					"description": "Seconds until password reset lockout.",
					"readOnly": true
				},
				"graceLoginTimes": {
					"type": "array",
					"description": "Times of previous grace logins.",
					"readOnly": true,
					"items": {
						"type": "string",
						"format": "date-time"
					}
				},
				"remainingGraceLoginCount": {
					"type": "integer",
					"format": "int32",
					"description": "Remaining grace login count.",
					"readOnly": true
				},
				"passwordChangedByRequiredTime": {
					"type": "string",
					"format": "date-time",
					"description": "Password change by required time. Set to null to clear."
				},
				"secondsUntilRequiredChangeTime": {
					"type": "integer",
					"format": "int32",
					"description": "Seconds until require change time.",
					"readOnly": true
				},
				"accountActivationTime": {
					"type": "string",
					"format": "date-time",
					"description": "Time of account activation.  Set to null to clear."
				},
				"accountUsabilityNotices": {
					"type": "array",
					"description": "Account usability notices.",
					"readOnly": true,
					"items": {
						"$ref": "#/definitions/Account Usability Issue"
					}
				},
				"accountUsabilityWarnings": {
					"type": "array",
					"description": "Account usability warnings.",
					"readOnly": true,
					"items": {
						"$ref": "#/definitions/Account Usability Issue"
					}
				},
				"accountUsabilityErrors": {
					"type": "array",
					"description": "Account usability errors.",
					"readOnly": true,
					"items": {
						"$ref": "#/definitions/Account Usability Issue"
					}
				},
				"passwordHistory": {
					"type": "array",
					"description": "Password history. Set to null to clear.",
					"items": {
						"type": "object",
						"properties": {
							"passwordExpirationTime": {
								"type": "string",
								"format": "date-time",
								"description": "The expiration time of the password."
							},
							"passwordRetiredTime": {
								"type": "string",
								"format": "date-time",
								"description": "The time that the password was retired."
							}
						}
					}
				}
			},
			"description": "Account state is used to retrieve and update the user's account state"
		},
		"Email Validation Request": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:EmailValidationRequest"],
						"default": "urn:pingidentity:scim:api:messages:2.0:EmailValidationRequest"
					}
				},
				"attributePath": {
					"type": "string",
					"description": "The attribute path containing the email address"
				},
				"attributeValue": {
					"type": "string",
					"description": "The email address"
				},
				"messageSubject": {
					"type": "string",
					"description": "The subject of the email message when sending the verification code"
				},
				"messageText": {
					"type": "string",
					"description": "The body of the email message when sending the verification code"
				},
				"verifyCode": {
					"type": "string",
					"description": "The code to verify"
				},
				"validated": {
					"type": "boolean",
					"description": "Whether the current email address was successfully validated"
				},
				"validatedAt": {
					"type": "string",
					"description": "The last time the current email address was successfully validated"
				},
				"codeSent": {
					"type": "boolean",
					"description": "Whether a verification code was sent and is pending validation"
				}
			},
			"description": "Request for validating an email address"
		},
		"Account Usability Issue": {
			"properties": {
				"name": {
					"type": "string",
					"description": "The name for this account usability issue."
				},
				"message": {
					"type": "string",
					"description": "The human-readable message that provides specific details about this account usability issue."
				}
			},
			"description": "Account usability issue"
		},
		"OAuth2 Consent History": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:consentHistory"],
						"default": "urn:pingidentity:scim:api:messages:2.0:consentHistory"
					}
				},
				"id": {
					"type": "string",
					"description": "The event ID"
				},
				"client": {
					"description": "The target OAuth2 client.",
					"$ref": "#/definitions/OAuth2 Client"
				},
				"scopes": {
					"type": "array",
					"description": "The consent decision for OAuth2 scopes.",
					"items": {
						"type": "object",
						"properties": {
							"consent": {
								"type": "string",
								"description": "The consent decision for the scope.",
								"enum": ["granted", "denied", "revoked"]
							},
							"description": {
								"type": "string",
								"description": "The description of the scope."
							},
							"name": {
								"type": "string",
								"description": "The name of the scope."
							}
						}
					}
				}
			},
			"description": "A user's history of consent events for an OAuth2 client"
		},
		"External Identity": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:ExternalIdentity"],
						"default": "urn:pingidentity:scim:api:messages:2.0:ExternalIdentity"
					}
				},
				"provider": {
					"type": "object",
					"description": "The external identity provider",
					"properties": {
						"description": {
							"type": "string",
							"description": "The description of the External Identity Provider"
						},
						"iconUrl": {
							"type": "string",
							"format": "uri",
							"description": "The icon URL for this External Identity Provider"
						},
						"name": {
							"type": "string",
							"description": "The name of the External Identity Provider"
						},
						"type": {
							"type": "string",
							"description": "The type of external identity provider",
							"enum": ["Facebook", "GooglePlus", "Oidc"]
						}
					}
				},
				"providerUserId": {
					"type": "string",
					"description": "The user ID at the provider. If not available, the user is not linked to any external identities at this provider.",
					"readOnly": true
				},
				"accessToken": {
					"type": "string",
					"description": "The access token issued by the provider that may be used to retrieve additional data.",
					"readOnly": true
				},
				"refreshToken": {
					"type": "string",
					"description": "The refresh token issued by the provider that may be used to retrieve a new access token.",
					"readOnly": true
				}
			},
			"description": "A link to an external identity provider"
		},
		"OAuth2 Consent": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:consent"],
						"default": "urn:pingidentity:scim:api:messages:2.0:consent"
					}
				},
				"client": {
					"description": "The target OAuth2 client.",
					"$ref": "#/definitions/OAuth2 Client"
				},
				"scopes": {
					"type": "array",
					"description": "The consent decision for OAuth2 scopes.",
					"items": {
						"type": "object",
						"properties": {
							"consent": {
								"type": "string",
								"description": "The consent decision for the scope.",
								"enum": ["granted", "denied"]
							},
							"consentPromptText": {
								"type": "string",
								"description": "The consent prompt text for the scope."
							},
							"description": {
								"type": "string",
								"description": "A description of this scope that is intended for end-users."
							},
							"name": {
								"type": "string",
								"description": "The name of the scope."
							}
						}
					}
				}
			},
			"description": "A user's consent for an OAuth2 client"
		},
		"Password Update Error Response": {
			"required": ["schemas", "status"],
			"properties": {
				"detail": {
					"type": "string",
					"description": "A detailed, human readable message."
				},
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:PasswordUpdateError"],
						"default": "urn:pingidentity:scim:api:messages:2.0:PasswordUpdateError"
					}
				},
				"scimType": {
					"type": "string",
					"description": "A SCIM detailed error keyword."
				},
				"status": {
					"type": "string",
					"description": "The HTTP status code (see Section 6 [RFC7231]) expressed as a JSON String.",
					"readOnly": true
				},
				"urn:pingidentity:scim:api:messages:2.0:PasswordUpdateError": {
					"type": "object",
					"properties": {
						"passwordRequirements": {
							"type": "array",
							"description": "If present, the new password did not meet one or more quality requirements in this list",
							"items": {
								"type": "object",
								"properties": {
									"additionalInfo": {
										"type": "string",
										"description": "The message associated with this failure."
									},
									"allow-unclassified-characters": {
										"type": "boolean",
										"description": "whether to allow passwords to contain characters not listed in any set. Only applicable when requirement type is \"character-set\""
									},
									"case-sensitive-validation": {
										"type": "boolean",
										"description": "Whether the validation will be case-sensitive or case-insensitive. Only applicable when requirement type is \"repeated-characters\" or \"unique-characters\""
									},
									"character-sets": {
										"type": "array",
										"description": "The characters and minimum count for each set. Only applicable when requirement type is \"character-set\"",
										"items": {
											"type": "object",
											"properties": {
												"characters": {
													"type": "string",
													"description": "The characters included in a character set"
												},
												"min-count": {
													"type": "integer",
													"format": "int32",
													"description": "The minimum number of characters from that set required to be present."
												}
											}
										}
									},
									"description": {
										"type": "string",
										"description": "The human-readable description of the password requirement."
									},
									"match-behavior": {
										"type": "string",
										"description": "The behavior to use when performing the match. Only applicable when requirement type is \"regular-expressions\"",
										"enum": ["require-match", "reject-match"]
									},
									"match-pattern": {
										"type": "string",
										"format": "regex",
										"description": "The regular expression that passwords are evaluated against.Only applicable when requirement type is \"regular-expressions\""
									},
									"max-consecutive-length": {
										"type": "integer",
										"format": "int32",
										"description": "The maximum number of consecutive repeated characters that will be allowed. Only applicable when requirement type is \"repeated-characters\""
									},
									"max-password-length": {
										"type": "integer",
										"format": "int32",
										"description": "The maximum number of characters that passwords will be required to have. Only applicable when requirement type is \"length\""
									},
									"min-password-difference": {
										"type": "integer",
										"format": "int32",
										"description": "The minimum number of differences that must be observed between the former password and the new password. Only applicable when requirement type is \"similarity\""
									},
									"min-unique-characters": {
										"type": "integer",
										"format": "int32",
										"description": "The minimum number of unique characters that the password must contain. Only applicable when requirement type is \"unique-characters\""
									},
									"requirementSatisfied": {
										"type": "boolean",
										"description": "True if this requirement was satisfied.  False if not."
									},
									"type": {
										"type": "string",
										"description": "The type of password requirement."
									}
								}
							}
						}
					}
				}
			},
			"description": "Extension of standard SCIM 2.0 error for password update errors"
		},
		"OAuth2 Client": {
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the OAuth2 Client"
				},
				"description": {
					"type": "string",
					"description": "The description of the OAuth2 Client"
				},
				"url": {
					"type": "string",
					"format": "uri",
					"description": "The URL for the OAuth2 Client"
				},
				"iconUrl": {
					"type": "string",
					"format": "uri",
					"description": "The icon URL for this OAuth2 Client"
				},
				"emailAddress": {
					"type": "string",
					"format": "email",
					"description": "The contact email for this OAuth2 Client"
				}
			},
			"description": "An OAuth2 Client"
		},
		"Password Update Request": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:PasswordUpdateRequest"],
						"default": "urn:pingidentity:scim:api:messages:2.0:PasswordUpdateRequest"
					}
				},
				"currentPassword": {
					"type": "string",
					"format": "password",
					"description": "The user's current password."
				},
				"newPassword": {
					"type": "string",
					"format": "password",
					"description": "The requested new password for the user."
				}
			},
			"description": "Request object for updating user passwords"
		},
		"Patch Request": {
			"required": ["Operations", "schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
						"default": "urn:ietf:params:scim:api:messages:2.0:PatchOp"
					}
				},
				"Operations": {
					"type": "array",
					"description": "Array of one or more patch operations.",
					"uniqueItems": true,
					"items": {
						"type": "object",
						"properties": {
							"op": {
								"type": "string",
								"description": "Indicates the operation to perform and MAY be one of \"add\", \"remove\", or \"replace\".",
								"enum": ["add", "remove", "replace"]
							},
							"path": {
								"type": "string",
								"description": "Contains an attribute path describing the target of the operation. Optional for \"add\" and \"replace\" and is required for \"remove\" operations."
							},
							"value": {
								"description": "Specifies the attributes and/or values to be added or replaced. Only required for \"add\" and \"replace\" operations."
							}
						}
					}
				}
			}
		},
		"Search Request": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:ietf:params:scim:api:messages:2.0:SearchRequest"],
						"default": "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
					}
				},
				"attributes": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "A multi-valued list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default.\"excludedAttributes\" must not also be specified if this is specified."
					}
				},
				"excludedAttributes": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "A multi-valued list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. \"attributes\" must not also be specified if this is specified."
					}
				},
				"filter": {
					"type": "string",
					"description": "The filter string used to request a subset of resources."
				},
				"sortBy": {
					"type": "string",
					"description": "A string indicating the attribute whose value shall be used to order the returned responses."
				},
				"sortOrder": {
					"type": "string",
					"description": "A string indicating the order in which the \"sortBy\" parameter is applied.",
					"enum": ["ascending", "descending"]
				},
				"startIndex": {
					"type": "integer",
					"format": "int32",
					"description": "An integer indicating the 1-based index of the first query result.",
					"minimum": 1.0
				},
				"count": {
					"type": "integer",
					"format": "int32",
					"description": "An integer indicating the desired maximum number of query results per page.",
					"minimum": 0.0
				}
			}
		},
		"OBThirdPartyProviders": {
			"required": ["schemas", "urn:openbanking:organisation:1.0"],
			"properties": {
				"externalId": {
					"type": "string",
					"title": "externalId"
				},
				"id": {
					"type": "string",
					"title": "id",
					"readOnly": true
				},
				"meta": {
					"type": "object",
					"title": "meta",
					"readOnly": true,
					"properties": {
						"created": {
							"type": "string",
							"format": "date-time",
							"description": "Date and time the resource was created",
							"title": "created",
							"readOnly": true
						},
						"lastModified": {
							"type": "string",
							"format": "date-time",
							"description": "Date and time the resource was last modified",
							"title": "lastModified",
							"readOnly": true
						},
						"location": {
							"type": "string",
							"format": "uri",
							"description": "The location (URI) of the resource",
							"title": "location",
							"readOnly": true
						},
						"resourceType": {
							"type": "string",
							"description": "The resource Type",
							"title": "resourceType",
							"readOnly": true
						},
						"version": {
							"type": "string",
							"description": "The version of the resource",
							"title": "version",
							"readOnly": true
						}
					}
				},
				"schemas": {
					"type": "array",
					"title": "schemas",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"urn:openbanking:competentauthorityclaims:1.0": {
					"type": "object",
					"description": "Claims sourced from a competent authority - can be applied to either TPPs to ASPSP",
					"properties": {
						"Authorisations": {
							"type": "array",
							"description": "Home or Passported Authorisations",
							"title": "Authorisations",
							"items": {
								"type": "object",
								"properties": {
									"Active": {
										"type": "boolean",
										"description": "Indicator to show if this claim is active",
										"title": "Active"
									},
									"MemberState": {
										"type": "string",
										"description": "Member State giving the authorisation",
										"title": "MemberState"
									},
									"Psd2Role": {
										"type": "string",
										"description": "Psd2 Role in which institution authorised",
										"title": "Psd2Role"
									}
								}
							}
						},
						"AuthorityId": {
							"type": "string",
							"description": "The ID of the accrediting authority.",
							"title": "AuthorityId"
						},
						"MemberState": {
							"type": "string",
							"description": "Member State of the Authority",
							"title": "MemberState"
						},
						"RegistrationId": {
							"type": "string",
							"description": "Registration Id with the principle authority",
							"title": "RegistrationId"
						}
					}
				},
				"urn:openbanking:legalauthorityclaims:1.0": {
					"type": "object",
					"description": "Claims sourced from a legal authority - can be applied to either TPPs to ASPSP",
					"properties": {
						"LegalAuthorityClaims": {
							"type": "array",
							"title": "LegalAuthorityClaims",
							"items": {
								"type": "object",
								"properties": {
									"RegisteredId": {
										"type": "string",
										"title": "RegisteredId"
									},
									"RegisteredName": {
										"type": "string",
										"title": "RegisteredName"
									},
									"RegistrationAuthorityId": {
										"type": "string",
										"title": "RegistrationAuthorityId"
									}
								}
							}
						}
					}
				},
				"urn:openbanking:organisation:1.0": {
					"type": "object",
					"description": "Account details for an open banking organisation which are used for SCIM access to the Directory on behalf of an accredited organisation.",
					"title": "Organisation",
					"properties": {
						"CreateTimestamp": {
							"type": "string",
							"description": "Creation Timestamp",
							"title": "CreateTimestamp",
							"readOnly": true
						},
						"EmailAddresses": {
							"type": "array",
							"description": "Email addresses associated with the organisation",
							"title": "EmailAddresses",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this email belongs.",
										"title": "Name"
									},
									"Primary": {
										"type": "boolean",
										"description": "Indicator to show is this is the primary email address",
										"title": "Primary"
									},
									"Type": {
										"type": "string",
										"description": "Type of email address",
										"title": "Type"
									},
									"Value": {
										"type": "string",
										"description": "Value of email address",
										"title": "Value"
									}
								}
							}
						},
						"ModifyTimestamp": {
							"type": "string",
							"description": "Modification Timestamp",
							"title": "ModifyTimestamp",
							"readOnly": true
						},
						"OBOrganisationId": {
							"type": "string",
							"title": "OBOrganisationId"
						},
						"OrganisationCommonName": {
							"type": "string",
							"description": "The common name of the organisation",
							"title": "OrganisationCommonName"
						},
						"PersonalAccountRoles": {
							"type": "array",
							"title": "PersonalAccountRoles",
							"items": {
								"type": "object",
								"properties": {
									"Role": {
										"type": "string",
										"title": "Role"
									},
									"UserName": {
										"type": "string",
										"format": "uri",
										"title": "UserName"
									}
								}
							}
						},
						"PhoneNumbers": {
							"type": "array",
							"description": "Phone numbers by which an organisation can be contacted",
							"title": "PhoneNumbers",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this phone number belongs.",
										"title": "Name"
									},
									"Type": {
										"type": "string",
										"description": "Type of phone contact",
										"title": "Type"
									},
									"Value": {
										"type": "string",
										"description": "Value of phone number through which the organisation can be contacted",
										"title": "Value"
									},
									"Verified": {
										"type": "boolean",
										"description": "Flag to show that the phone number has been verified",
										"title": "Verified"
									}
								}
							}
						},
						"PostalAddress": {
							"type": "array",
							"description": "Postal Address of the organisation",
							"title": "PostalAddress",
							"items": {
								"type": "object",
								"properties": {
									"AddressLine2": {
										"type": "string",
										"description": "Locality name",
										"title": "AddressLine2"
									},
									"Country": {
										"type": "string",
										"description": "2 disigt country code",
										"title": "Country"
									},
									"County": {
										"type": "string",
										"description": "County",
										"title": "County"
									},
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this address belongs.",
										"title": "Name"
									},
									"POBox": {
										"type": "string",
										"description": "PO Box for address",
										"title": "POBox"
									},
									"PostCode": {
										"type": "string",
										"description": "Post Code of address",
										"title": "PostCode"
									},
									"Primary": {
										"type": "boolean",
										"description": "Inidcator to show if this is the primary address of the organisation",
										"title": "Primary"
									},
									"StreetAddress": {
										"type": "string",
										"description": "Street Address of the organisation",
										"title": "StreetAddress"
									},
									"Town": {
										"type": "string",
										"description": "Postal Town",
										"title": "Town"
									},
									"Type": {
										"type": "string",
										"description": "Type of contact",
										"title": "Type"
									}
								}
							}
						}
					}
				},
				"urn:openbanking:softwarestatement:1.0": {
					"type": "object",
					"description": "The definition of a software statement as defined by OpenBanking ecosystem",
					"properties": {
						"SoftwareStatements": {
							"type": "array",
							"title": "SoftwareStatements",
							"items": {
								"type": "object",
								"properties": {
									"Active": {
										"type": "boolean",
										"description": "Status indicating if a software record is active or not.",
										"title": "Active"
									},
									"ClientId": {
										"type": "string",
										"description": "Requested Client Id - note that OB will issue a set of credentials with this clientid for this given piece of software. ASPSPs are not obliged to honour this requested clientid",
										"title": "ClientId"
									},
									"ClientName": {
										"type": "string",
										"description": "Human readable client name. May be localized.",
										"title": "ClientName"
									},
									"Description": {
										"type": "string",
										"description": "Description of the unique instance of this piece of software. If only one instance of a piece of software is to be registered then this should be the same as the SoftwareDescription",
										"title": "Description"
									},
									"Id": {
										"type": "string",
										"description": "Unique Scheme Wide Software id",
										"title": "Id"
									},
									"Mode": {
										"type": "string",
										"description": "A flag to identify if a piece of software should have access to production PSU accounts. This field has been added at the request of an ASPSP to allow BETA or Non Production testing against production platforms. The default for this system should be \"Live\"",
										"title": "Mode"
									},
									"ObClientCreated": {
										"type": "boolean",
										"description": "An indicator to show if the client has been created in Open Banking",
										"title": "ObClientCreated"
									},
									"OnBehalfOfObOrganisation": {
										"type": "string",
										"format": "uri",
										"description": "The organisation on whom this software statement is behalf of",
										"title": "OnBehalfOfObOrganisation"
									},
									"PolicyUri": {
										"type": "string",
										"description": "An optional document containing a link to a Policy document governing the privacy information policy of for the application. Purely to be displayed a PSU at a ASPSP if the ASPSP supports it. Optional for the TPP to provide.",
										"title": "PolicyUri"
									},
									"RedirectUri": {
										"type": "array",
										"description": "Redirect Uri's for the registered piece of software. May be overridden by the RFC7591 payload.",
										"title": "RedirectUri",
										"items": {
											"type": "string"
										}
									},
									"Roles": {
										"type": "array",
										"title": "Roles",
										"items": {
											"type": "string"
										}
									},
									"SigningKeyIds": {
										"type": "array",
										"description": "KeyIds of Keys  used for signing messages",
										"title": "SigningKeyIds",
										"items": {
											"type": "string"
										}
									},
									"TermsOfServiceUri": {
										"type": "string",
										"description": "An optional document containing a link to a Terms of Service document governing the terms of service for the application. Purely to be displayed a PSU at a ASPSP if the ASPSP supports it. Optional for the TPP to provide.",
										"title": "TermsOfServiceUri"
									},
									"TransportKeyIds": {
										"type": "array",
										"description": "KeyIds of Keys used for securing message transport (TLS)",
										"title": "TransportKeyIds",
										"items": {
											"type": "string"
										}
									},
									"Version": {
										"type": "number",
										"description": "Version of the sofware",
										"title": "Version"
									}
								}
							}
						}
					}
				}
			},
			"description": "Thirs party providers consisting of payment initiation service providers and account information service providers"
		},
		"Password Quality Requirement Response": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:schemas:2.0:PasswordQualityRequirement"],
						"default": "urn:pingidentity:schemas:2.0:PasswordQualityRequirement"
					}
				},
				"currentPasswordRequired": {
					"type": "boolean",
					"description": "True if the user's password is required for password updates."
				},
				"mustChangePassword": {
					"type": "boolean",
					"description": "True if the user's password must be changed."
				},
				"secondsUntilPasswordExpiration": {
					"type": "integer",
					"format": "int32",
					"description": "The number of seconds before the password will expire."
				},
				"passwordRequirements": {
					"type": "array",
					"description": "A list of password requirements that must be met.",
					"items": {
						"type": "object",
						"properties": {
							"allow-unclassified-characters": {
								"type": "boolean",
								"description": "whether to allow passwords to contain characters not listed in any set. Only applicable when requirement type is \"character-set\""
							},
							"case-sensitive-validation": {
								"type": "boolean",
								"description": "Whether the validation will be case-sensitive or case-insensitive. Only applicable when requirement type is \"repeated-characters\" or \"unique-characters\""
							},
							"character-sets": {
								"type": "array",
								"description": "The characters and minimum count for each set. Only applicable when requirement type is \"character-set\"",
								"items": {
									"type": "object",
									"properties": {
										"characters": {
											"type": "string",
											"description": "The characters included in a character set"
										},
										"min-count": {
											"type": "integer",
											"format": "int32",
											"description": "The minimum number of characters from that set required to be present."
										}
									}
								}
							},
							"description": {
								"type": "string",
								"description": "The human-readable description of the password requirement."
							},
							"match-behavior": {
								"type": "string",
								"description": "The behavior to use when performing the match. Only applicable when requirement type is \"regular-expressions\"",
								"enum": ["require-match", "reject-match"]
							},
							"match-pattern": {
								"type": "string",
								"format": "regex",
								"description": "The regular expression that passwords are evaluated against.Only applicable when requirement type is \"regular-expressions\""
							},
							"max-consecutive-length": {
								"type": "integer",
								"format": "int32",
								"description": "The maximum number of consecutive repeated characters that will be allowed. Only applicable when requirement type is \"repeated-characters\""
							},
							"max-password-length": {
								"type": "integer",
								"format": "int32",
								"description": "The maximum number of characters that passwords will be required to have. Only applicable when requirement type is \"length\""
							},
							"min-password-difference": {
								"type": "integer",
								"format": "int32",
								"description": "The minimum number of differences that must be observed between the former password and the new password. Only applicable when requirement type is \"similarity\""
							},
							"min-unique-characters": {
								"type": "integer",
								"format": "int32",
								"description": "The minimum number of unique characters that the password must contain. Only applicable when requirement type is \"unique-characters\""
							},
							"type": {
								"type": "string",
								"description": "The type of password requirement."
							}
						}
					}
				}
			},
			"description": "The password quality requirements for a particular user"
		},
		"OBAuthorities": {
			"required": ["AuthorityId", "Country", "schemas", "urn:openbanking:organisation:1.0"],
			"properties": {
				"AuthorityDescription": {
					"type": "string",
					"title": "AuthorityDescription"
				},
				"AuthorityId": {
					"type": "string",
					"description": "Unique string that the Authority is commonly known by. Will be referenced by the AuthorityClaims Set.",
					"title": "AuthorityId"
				},
				"Country": {
					"type": "string",
					"description": "Country in which the Authority has juristiction",
					"title": "Country"
				},
				"externalId": {
					"type": "string",
					"title": "externalId"
				},
				"id": {
					"type": "string",
					"title": "id",
					"readOnly": true
				},
				"meta": {
					"type": "object",
					"title": "meta",
					"readOnly": true,
					"properties": {
						"created": {
							"type": "string",
							"format": "date-time",
							"description": "Date and time the resource was created",
							"title": "created",
							"readOnly": true
						},
						"lastModified": {
							"type": "string",
							"format": "date-time",
							"description": "Date and time the resource was last modified",
							"title": "lastModified",
							"readOnly": true
						},
						"location": {
							"type": "string",
							"format": "uri",
							"description": "The location (URI) of the resource",
							"title": "location",
							"readOnly": true
						},
						"resourceType": {
							"type": "string",
							"description": "The resource Type",
							"title": "resourceType",
							"readOnly": true
						},
						"version": {
							"type": "string",
							"description": "The version of the resource",
							"title": "version",
							"readOnly": true
						}
					}
				},
				"schemas": {
					"type": "array",
					"title": "schemas",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"urn:openbanking:organisation:1.0": {
					"type": "object",
					"description": "Account details for an open banking organisation which are used for SCIM access to the Directory on behalf of an accredited organisation.",
					"title": "Organisation",
					"properties": {
						"CreateTimestamp": {
							"type": "string",
							"description": "Creation Timestamp",
							"title": "CreateTimestamp",
							"readOnly": true
						},
						"EmailAddresses": {
							"type": "array",
							"description": "Email addresses associated with the organisation",
							"title": "EmailAddresses",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this email belongs.",
										"title": "Name"
									},
									"Primary": {
										"type": "boolean",
										"description": "Indicator to show is this is the primary email address",
										"title": "Primary"
									},
									"Type": {
										"type": "string",
										"description": "Type of email address",
										"title": "Type"
									},
									"Value": {
										"type": "string",
										"description": "Value of email address",
										"title": "Value"
									}
								}
							}
						},
						"ModifyTimestamp": {
							"type": "string",
							"description": "Modification Timestamp",
							"title": "ModifyTimestamp",
							"readOnly": true
						},
						"OBOrganisationId": {
							"type": "string",
							"title": "OBOrganisationId"
						},
						"OrganisationCommonName": {
							"type": "string",
							"description": "The common name of the organisation",
							"title": "OrganisationCommonName"
						},
						"PersonalAccountRoles": {
							"type": "array",
							"title": "PersonalAccountRoles",
							"items": {
								"type": "object",
								"properties": {
									"Role": {
										"type": "string",
										"title": "Role"
									},
									"UserName": {
										"type": "string",
										"format": "uri",
										"title": "UserName"
									}
								}
							}
						},
						"PhoneNumbers": {
							"type": "array",
							"description": "Phone numbers by which an organisation can be contacted",
							"title": "PhoneNumbers",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this phone number belongs.",
										"title": "Name"
									},
									"Type": {
										"type": "string",
										"description": "Type of phone contact",
										"title": "Type"
									},
									"Value": {
										"type": "string",
										"description": "Value of phone number through which the organisation can be contacted",
										"title": "Value"
									},
									"Verified": {
										"type": "boolean",
										"description": "Flag to show that the phone number has been verified",
										"title": "Verified"
									}
								}
							}
						},
						"PostalAddress": {
							"type": "array",
							"description": "Postal Address of the organisation",
							"title": "PostalAddress",
							"items": {
								"type": "object",
								"properties": {
									"AddressLine2": {
										"type": "string",
										"description": "Locality name",
										"title": "AddressLine2"
									},
									"Country": {
										"type": "string",
										"description": "2 disigt country code",
										"title": "Country"
									},
									"County": {
										"type": "string",
										"description": "County",
										"title": "County"
									},
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this address belongs.",
										"title": "Name"
									},
									"POBox": {
										"type": "string",
										"description": "PO Box for address",
										"title": "POBox"
									},
									"PostCode": {
										"type": "string",
										"description": "Post Code of address",
										"title": "PostCode"
									},
									"Primary": {
										"type": "boolean",
										"description": "Inidcator to show if this is the primary address of the organisation",
										"title": "Primary"
									},
									"StreetAddress": {
										"type": "string",
										"description": "Street Address of the organisation",
										"title": "StreetAddress"
									},
									"Town": {
										"type": "string",
										"description": "Postal Town",
										"title": "Town"
									},
									"Type": {
										"type": "string",
										"description": "Type of contact",
										"title": "Type"
									}
								}
							}
						}
					}
				}
			},
			"description": "A schema defining the extension attributes that a competentauthority has."
		},
		"Telephony Validation Request": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:TelephonyValidationRequest"],
						"default": "urn:pingidentity:scim:api:messages:2.0:TelephonyValidationRequest"
					}
				},
				"attributePath": {
					"type": "string",
					"description": "The attribute path containing the telephone number"
				},
				"attributeValue": {
					"type": "string",
					"description": "The telephone number"
				},
				"message": {
					"type": "object",
					"description": "The message used to send the verification code",
					"properties": {
						"language": {
							"type": "string",
							"description": "The language and locale of the message"
						},
						"message": {
							"type": "string",
							"description": "The message to be delivered"
						}
					}
				},
				"messagingProvider": {
					"type": "string",
					"description": "The messaging provider to use when sending the verification code"
				},
				"verifyCode": {
					"type": "string",
					"description": "The code to verify"
				},
				"validated": {
					"type": "boolean",
					"description": "Whether the current telephone number was successfully validated"
				},
				"validatedAt": {
					"type": "string",
					"description": "The last time the current telephone number was successfully validated"
				},
				"codeSent": {
					"type": "boolean",
					"description": "Whether a verification code was sent and is pending validation"
				}
			},
			"description": "Request for validating a phone number"
		},
		"OBAccountPaymentServiceProviders": {
			"required": ["schemas", "urn:openbanking:organisation:1.0"],
			"properties": {
				"AuthorisationServers": {
					"type": "array",
					"title": "AuthorisationServers",
					"items": {
						"type": "object",
						"properties": {
							"AutoRegistrationSupported": {
								"type": "boolean",
								"title": "AutoRegistrationSupported"
							},
							"BaseApiDNSUri": {
								"type": "string",
								"title": "BaseApiDNSUri"
							},
							"ClientRegistrationUri": {
								"type": "string",
								"description": "The registration endpoint for TPP onboarding to ASPSPs.",
								"title": "ClientRegistrationUri"
							},
							"CustomerFriendlyDescription": {
								"type": "string",
								"title": "CustomerFriendlyDescription"
							},
							"CustomerFriendlyLogoUri": {
								"type": "string",
								"description": "An image location where TPP's if they choose too, can retrieve a certified logo for the given authorisation server. Preferably as a scalable vector graphic. Customer work stream to define the ratios. Preferably delivered as a scalable vector graphic.",
								"title": "CustomerFriendlyLogoUri"
							},
							"CustomerFriendlyName": {
								"type": "string",
								"title": "CustomerFriendlyName"
							},
							"DeveloperPortalUri": {
								"type": "string",
								"title": "DeveloperPortalUri"
							},
							"Id": {
								"type": "string",
								"description": "Unique Scheme Wide Authorisation Server id",
								"title": "Id"
							},
							"OpenIDConfigEndPointUri": {
								"type": "string",
								"title": "OpenIDConfigEndPointUri"
							},
							"PayloadSigningCertLocation": {
								"type": "string",
								"description": "The location which is used for signing certificates",
								"title": "PayloadSigningCertLocation"
							},
							"TermsOfService": {
								"type": "string",
								"title": "TermsOfService"
							}
						}
					}
				},
				"externalId": {
					"type": "string",
					"title": "externalId"
				},
				"id": {
					"type": "string",
					"title": "id",
					"readOnly": true
				},
				"meta": {
					"type": "object",
					"title": "meta",
					"readOnly": true,
					"properties": {
						"created": {
							"type": "string",
							"format": "date-time",
							"description": "Date and time the resource was created",
							"title": "created",
							"readOnly": true
						},
						"lastModified": {
							"type": "string",
							"format": "date-time",
							"description": "Date and time the resource was last modified",
							"title": "lastModified",
							"readOnly": true
						},
						"location": {
							"type": "string",
							"format": "uri",
							"description": "The location (URI) of the resource",
							"title": "location",
							"readOnly": true
						},
						"resourceType": {
							"type": "string",
							"description": "The resource Type",
							"title": "resourceType",
							"readOnly": true
						},
						"version": {
							"type": "string",
							"description": "The version of the resource",
							"title": "version",
							"readOnly": true
						}
					}
				},
				"schemas": {
					"type": "array",
					"title": "schemas",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"urn:openbanking:competentauthorityclaims:1.0": {
					"type": "object",
					"description": "Claims sourced from a competent authority - can be applied to either TPPs to ASPSP",
					"properties": {
						"Authorisations": {
							"type": "array",
							"description": "Home or Passported Authorisations",
							"title": "Authorisations",
							"items": {
								"type": "object",
								"properties": {
									"Active": {
										"type": "boolean",
										"description": "Indicator to show if this claim is active",
										"title": "Active"
									},
									"MemberState": {
										"type": "string",
										"description": "Member State giving the authorisation",
										"title": "MemberState"
									},
									"Psd2Role": {
										"type": "string",
										"description": "Psd2 Role in which institution authorised",
										"title": "Psd2Role"
									}
								}
							}
						},
						"AuthorityId": {
							"type": "string",
							"description": "The ID of the accrediting authority.",
							"title": "AuthorityId"
						},
						"MemberState": {
							"type": "string",
							"description": "Member State of the Authority",
							"title": "MemberState"
						},
						"RegistrationId": {
							"type": "string",
							"description": "Registration Id with the principle authority",
							"title": "RegistrationId"
						}
					}
				},
				"urn:openbanking:legalauthorityclaims:1.0": {
					"type": "object",
					"description": "Claims sourced from a legal authority - can be applied to either TPPs to ASPSP",
					"properties": {
						"LegalAuthorityClaims": {
							"type": "array",
							"title": "LegalAuthorityClaims",
							"items": {
								"type": "object",
								"properties": {
									"RegisteredId": {
										"type": "string",
										"title": "RegisteredId"
									},
									"RegisteredName": {
										"type": "string",
										"title": "RegisteredName"
									},
									"RegistrationAuthorityId": {
										"type": "string",
										"title": "RegistrationAuthorityId"
									}
								}
							}
						}
					}
				},
				"urn:openbanking:organisation:1.0": {
					"type": "object",
					"description": "Account details for an open banking organisation which are used for SCIM access to the Directory on behalf of an accredited organisation.",
					"title": "Organisation",
					"properties": {
						"CreateTimestamp": {
							"type": "string",
							"description": "Creation Timestamp",
							"title": "CreateTimestamp",
							"readOnly": true
						},
						"EmailAddresses": {
							"type": "array",
							"description": "Email addresses associated with the organisation",
							"title": "EmailAddresses",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this email belongs.",
										"title": "Name"
									},
									"Primary": {
										"type": "boolean",
										"description": "Indicator to show is this is the primary email address",
										"title": "Primary"
									},
									"Type": {
										"type": "string",
										"description": "Type of email address",
										"title": "Type"
									},
									"Value": {
										"type": "string",
										"description": "Value of email address",
										"title": "Value"
									}
								}
							}
						},
						"ModifyTimestamp": {
							"type": "string",
							"description": "Modification Timestamp",
							"title": "ModifyTimestamp",
							"readOnly": true
						},
						"OBOrganisationId": {
							"type": "string",
							"title": "OBOrganisationId"
						},
						"OrganisationCommonName": {
							"type": "string",
							"description": "The common name of the organisation",
							"title": "OrganisationCommonName"
						},
						"PersonalAccountRoles": {
							"type": "array",
							"title": "PersonalAccountRoles",
							"items": {
								"type": "object",
								"properties": {
									"Role": {
										"type": "string",
										"title": "Role"
									},
									"UserName": {
										"type": "string",
										"format": "uri",
										"title": "UserName"
									}
								}
							}
						},
						"PhoneNumbers": {
							"type": "array",
							"description": "Phone numbers by which an organisation can be contacted",
							"title": "PhoneNumbers",
							"items": {
								"type": "object",
								"properties": {
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this phone number belongs.",
										"title": "Name"
									},
									"Type": {
										"type": "string",
										"description": "Type of phone contact",
										"title": "Type"
									},
									"Value": {
										"type": "string",
										"description": "Value of phone number through which the organisation can be contacted",
										"title": "Value"
									},
									"Verified": {
										"type": "boolean",
										"description": "Flag to show that the phone number has been verified",
										"title": "Verified"
									}
								}
							}
						},
						"PostalAddress": {
							"type": "array",
							"description": "Postal Address of the organisation",
							"title": "PostalAddress",
							"items": {
								"type": "object",
								"properties": {
									"AddressLine2": {
										"type": "string",
										"description": "Locality name",
										"title": "AddressLine2"
									},
									"Country": {
										"type": "string",
										"description": "2 disigt country code",
										"title": "Country"
									},
									"County": {
										"type": "string",
										"description": "County",
										"title": "County"
									},
									"Name": {
										"type": "string",
										"description": "A name of a person or an office to which this address belongs.",
										"title": "Name"
									},
									"POBox": {
										"type": "string",
										"description": "PO Box for address",
										"title": "POBox"
									},
									"PostCode": {
										"type": "string",
										"description": "Post Code of address",
										"title": "PostCode"
									},
									"Primary": {
										"type": "boolean",
										"description": "Inidcator to show if this is the primary address of the organisation",
										"title": "Primary"
									},
									"StreetAddress": {
										"type": "string",
										"description": "Street Address of the organisation",
										"title": "StreetAddress"
									},
									"Town": {
										"type": "string",
										"description": "Postal Town",
										"title": "Town"
									},
									"Type": {
										"type": "string",
										"description": "Type of contact",
										"title": "Type"
									}
								}
							}
						}
					}
				},
				"urn:openbanking:softwarestatement:1.0": {
					"type": "object",
					"description": "The definition of a software statement as defined by OpenBanking ecosystem",
					"properties": {
						"SoftwareStatements": {
							"type": "array",
							"title": "SoftwareStatements",
							"items": {
								"type": "object",
								"properties": {
									"Active": {
										"type": "boolean",
										"description": "Status indicating if a software record is active or not.",
										"title": "Active"
									},
									"ClientId": {
										"type": "string",
										"description": "Requested Client Id - note that OB will issue a set of credentials with this clientid for this given piece of software. ASPSPs are not obliged to honour this requested clientid",
										"title": "ClientId"
									},
									"ClientName": {
										"type": "string",
										"description": "Human readable client name. May be localized.",
										"title": "ClientName"
									},
									"Description": {
										"type": "string",
										"description": "Description of the unique instance of this piece of software. If only one instance of a piece of software is to be registered then this should be the same as the SoftwareDescription",
										"title": "Description"
									},
									"Id": {
										"type": "string",
										"description": "Unique Scheme Wide Software id",
										"title": "Id"
									},
									"Mode": {
										"type": "string",
										"description": "A flag to identify if a piece of software should have access to production PSU accounts. This field has been added at the request of an ASPSP to allow BETA or Non Production testing against production platforms. The default for this system should be \"Live\"",
										"title": "Mode"
									},
									"ObClientCreated": {
										"type": "boolean",
										"description": "An indicator to show if the client has been created in Open Banking",
										"title": "ObClientCreated"
									},
									"OnBehalfOfObOrganisation": {
										"type": "string",
										"format": "uri",
										"description": "The organisation on whom this software statement is behalf of",
										"title": "OnBehalfOfObOrganisation"
									},
									"PolicyUri": {
										"type": "string",
										"description": "An optional document containing a link to a Policy document governing the privacy information policy of for the application. Purely to be displayed a PSU at a ASPSP if the ASPSP supports it. Optional for the TPP to provide.",
										"title": "PolicyUri"
									},
									"RedirectUri": {
										"type": "array",
										"description": "Redirect Uri's for the registered piece of software. May be overridden by the RFC7591 payload.",
										"title": "RedirectUri",
										"items": {
											"type": "string"
										}
									},
									"Roles": {
										"type": "array",
										"title": "Roles",
										"items": {
											"type": "string"
										}
									},
									"SigningKeyIds": {
										"type": "array",
										"description": "KeyIds of Keys  used for signing messages",
										"title": "SigningKeyIds",
										"items": {
											"type": "string"
										}
									},
									"TermsOfServiceUri": {
										"type": "string",
										"description": "An optional document containing a link to a Terms of Service document governing the terms of service for the application. Purely to be displayed a PSU at a ASPSP if the ASPSP supports it. Optional for the TPP to provide.",
										"title": "TermsOfServiceUri"
									},
									"TransportKeyIds": {
										"type": "array",
										"description": "KeyIds of Keys used for securing message transport (TLS)",
										"title": "TransportKeyIds",
										"items": {
											"type": "string"
										}
									},
									"Version": {
										"type": "number",
										"description": "Version of the sofware",
										"title": "Version"
									}
								}
							}
						}
					}
				}
			},
			"description": "ASPSP"
		},
		"Session": {
			"required": ["schemas"],
			"properties": {
				"schemas": {
					"type": "array",
					"description": "Contains a list of one or more URIs that indicate included SCIM schemas that are used to indicate the attributes contained within a resource.",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"format": "urn",
						"enum": ["urn:pingidentity:scim:api:messages:2.0:session"],
						"default": "urn:pingidentity:scim:api:messages:2.0:session"
					}
				},
				"lastLoginMethods": {
					"type": "array",
					"description": "Details about the authentication methods successfully used during the last login event",
					"items": {
						"type": "string"
					}
				},
				"lastSecondFactorMethods": {
					"type": "array",
					"description": "Details about the authentication methods successfully used during the last second factor event",
					"items": {
						"type": "string"
					}
				},
				"lastLogin": {
					"type": "string",
					"description": "The last time of a successful login event"
				},
				"lastSecondFactor": {
					"type": "string",
					"description": "The last time of a successful second factor event"
				},
				"ipAddress": {
					"type": "string",
					"description": "The IP address of the user agent that was used to perform the authentication"
				},
				"userAgentString": {
					"type": "string",
					"description": "The user agent string presented by the user agent that was used to perform the authentication"
				}
			},
			"description": "Session objects"
		},
		"OBAccounts": {
			"required": ["AccountVerified", "SecondFactorEnabled", "Status", "Username", "schemas"],
			"properties": {
				"AccountVerified": {
					"type": "boolean",
					"description": "Flag showing if account information has been verified",
					"title": "AccountVerified"
				},
				"CommonName": {
					"type": "string",
					"description": "The Forename or Christian Name of the Account Holder",
					"title": "CommonName"
				},
				"CreateTimestamp": {
					"type": "string",
					"description": "Creation timestamp",
					"title": "CreateTimestamp",
					"readOnly": true
				},
				"EMailAddresses": {
					"type": "array",
					"title": "EMailAddresses",
					"items": {
						"type": "object",
						"properties": {
							"Primary": {
								"type": "boolean",
								"title": "Primary"
							},
							"Type": {
								"type": "string",
								"description": "Type of email address",
								"title": "Type"
							},
							"Value": {
								"type": "string",
								"title": "Value"
							}
						}
					}
				},
				"HonourificPrefix": {
					"type": "string",
					"description": "Honourific Prefix",
					"title": "HonourificPrefix"
				},
				"HonourificSuffix": {
					"type": "string",
					"description": "Honourific Name Suffix i.e. K.G.",
					"title": "HonourificSuffix"
				},
				"MiddleInitial": {
					"type": "string",
					"description": "Middle Initial",
					"title": "MiddleInitial"
				},
				"MiddleName": {
					"type": "string",
					"description": "Middle Name",
					"title": "MiddleName"
				},
				"ModifyTimestamp": {
					"type": "string",
					"description": "Modification Timestamp",
					"title": "ModifyTimestamp",
					"readOnly": true
				},
				"PhoneNumbers": {
					"type": "array",
					"description": "Phone numbers held on the account",
					"title": "PhoneNumbers",
					"items": {
						"type": "object",
						"properties": {
							"Type": {
								"type": "string",
								"title": "Type"
							},
							"Value": {
								"type": "string",
								"title": "Value"
							},
							"Verified": {
								"type": "boolean",
								"title": "Verified"
							}
						}
					}
				},
				"PostalAddresses": {
					"type": "array",
					"description": "Account Holder Postal Addresses",
					"title": "PostalAddresses",
					"items": {
						"type": "object",
						"properties": {
							"AddressLine2": {
								"type": "string",
								"description": "Extra locality information such as the Village or Minor Town associated with the postal address",
								"title": "AddressLine2"
							},
							"Country": {
								"type": "string",
								"description": "2 digit country code associated with the address",
								"title": "Country"
							},
							"County": {
								"type": "string",
								"description": "The country name of the address",
								"title": "County"
							},
							"Name": {
								"type": "string",
								"description": "Name of contact",
								"title": "Name"
							},
							"POBox": {
								"type": "string",
								"description": "POBox",
								"title": "POBox"
							},
							"PostCode": {
								"type": "string",
								"description": "The post code of the address",
								"title": "PostCode"
							},
							"Primary": {
								"type": "boolean",
								"description": "Boolean indicating if this is the primary address",
								"title": "Primary"
							},
							"StreetAddress": {
								"type": "string",
								"description": "The Street address including the house name and number",
								"title": "StreetAddress"
							},
							"Town": {
								"type": "string",
								"description": "The postal address town",
								"title": "Town"
							},
							"Type": {
								"type": "string",
								"description": "Type of contact",
								"title": "Type"
							}
						}
					}
				},
				"SecondFactorEmail": {
					"type": "string",
					"description": "Second factor Email address",
					"title": "SecondFactorEmail"
				},
				"SecondFactorEnabled": {
					"type": "boolean",
					"description": "Flag to show is second factor details have been enabled",
					"title": "SecondFactorEnabled"
				},
				"SecondFactorPhoneNumber": {
					"type": "string",
					"description": "Second Factor Phone Number",
					"title": "SecondFactorPhoneNumber"
				},
				"Status": {
					"type": "array",
					"description": "User Status",
					"title": "Status",
					"items": {
						"type": "string"
					}
				},
				"Surname": {
					"type": "string",
					"description": "The Last or surname of the person to whom the account belongs",
					"title": "Surname"
				},
				"Title": {
					"type": "string",
					"description": "Title of person to whom the account belongs",
					"title": "Title"
				},
				"Username": {
					"type": "string",
					"description": "Unique username for this personal account - usually email address",
					"title": "Username"
				},
				"externalId": {
					"type": "string",
					"title": "externalId"
				},
				"id": {
					"type": "string",
					"title": "id",
					"readOnly": true
				},
				"meta": {
					"type": "object",
					"title": "meta",
					"readOnly": true,
					"properties": {
						"created": {
							"type": "string",
							"format": "date-time",
							"description": "Date and time the resource was created",
							"title": "created",
							"readOnly": true
						},
						"lastModified": {
							"type": "string",
							"format": "date-time",
							"description": "Date and time the resource was last modified",
							"title": "lastModified",
							"readOnly": true
						},
						"location": {
							"type": "string",
							"format": "uri",
							"description": "The location (URI) of the resource",
							"title": "location",
							"readOnly": true
						},
						"resourceType": {
							"type": "string",
							"description": "The resource Type",
							"title": "resourceType",
							"readOnly": true
						},
						"version": {
							"type": "string",
							"description": "The version of the resource",
							"title": "version",
							"readOnly": true
						}
					}
				},
				"schemas": {
					"type": "array",
					"title": "schemas",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				}
			},
			"description": "Account details for a Primary Technical Contact, or similar, which are used for SCIM access to the Directory on behalf of an accredited organisation"
		}
	},
	"parameters": {
		"filter": {
			"name": "filter",
			"in": "query",
			"description": "The filter string used to request a subset of resources.",
			"required": false,
			"type": "string"
		},
		"startIndex": {
			"name": "startIndex",
			"in": "query",
			"description": "An integer indicating the 1-based index of the first query result.",
			"required": false,
			"type": "integer"
		},
		"sortOrder": {
			"name": "sortOrder",
			"in": "query",
			"description": "A string indicating the order in which the \"sortBy\" parameter is applied.",
			"required": false,
			"type": "string",
			"enum": ["ascending", "descending"]
		},
		"count": {
			"name": "count",
			"in": "query",
			"description": "An integer indicating the desired maximum number of query results per page.",
			"required": false,
			"type": "integer"
		},
		"attributes": {
			"name": "attributes",
			"in": "query",
			"description": "A comma separated list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default. \"excludedAttributes\" must not also be specified if this is specified.",
			"required": false,
			"type": "string",
			"collectionFormat": "csv"
		},
		"sortBy": {
			"name": "sortBy",
			"in": "query",
			"description": "A string indicating the attribute whose value shall be used to order the returned responses.",
			"required": false,
			"type": "string"
		},
		"id": {
			"name": "id",
			"in": "path",
			"description": "The resource identifier (value of the \"id\" attribute).",
			"required": true,
			"type": "string"
		},
		"excludedAttributes": {
			"name": "excludedAttributes",
			"in": "query",
			"description": "A comma separated list of strings indicating the names of resource attributes to be removed from the default set of attributes to return. \"attributes\" must not also be specified if this is specified.",
			"required": false,
			"type": "string",
			"collectionFormat": "csv"
		}
	},
	"externalDocs": {
		"description": "SCIM 2.0 Protocol (RFC7644)",
		"url": "https://tools.ietf.org/html/rfc7644"
	}
}
