openapi: 3.0.0
info:
  title: Open Banking Directory API
  version: 0.0.1
  description: OB Tech Directory API (Draft)
paths:
  '/v2/organisation/{OrganisationType}':
    post:
      summary: Enrol a eIDAS QWAC-bearing participant
      description: Enrol an eIDAS QWAC certificate-bearing participant onto the Open Banking Directory. Currenty only TPPs can use this enrolment endpoint, so please set `OrganisationType` to `tpp`
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
      requestBody:
        $ref: '#/components/requestBodies/Enrol'
      responses:
        '201':
          $ref: '#/components/responses/Enrol201CreatedResponse'
        '400':
          $ref: '#/components/responses/Enrol400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get all organisations that the client is authorised to retrieve
      description: Note that this was not in the original design but is included to inform the client
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationsGetFromSCIM200OKResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
  '/v2/organisation/{OrganisationType}/{OrganisationId}':
    get:
      summary: Get the given organisation's details
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationGetFromSCIM200OKResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
  '/v2/organisation/{OrganisationType}/{OrganisationId}/contact/{ContactType}':
    put:
      summary: Update the business or the technical contacts for the given organisation
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactType'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get the business or the technical contacts for the given organisation
      x-PingAccessResourceName: OrganisationContactGET
      x-PingAccessRuleType: uk.org.openbanking.policy.RequestHostOverride
      x-PingAccessRuleTarget: obdorgcontacts.{environment}
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactType'
      responses:
        '200':
          $ref: '#/components/responses/Contact200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/v2/organisation/{OrganisationType}/{OrganisationId}/software-statement':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
    post:
      summary: Create a software statement
      tags:
        - Software Statements
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatement'
      responses:
        '201':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get all software statements for the given organisation
      tags:
        - Software Statements
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementsGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/v2/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get a software statement
      tags:
        - Software Statements
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      summary: Update a software statement
      tags:
        - Software Statements
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementState'
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementUpdated200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/v2/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/redirect-uri':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    post:
      summary: Add a redirect URI to the given Software Statement
      tags:
        - Software Statement Redirect URIs
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementRedirectURI'
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementUpdated200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '409':
          $ref: '#/components/responses/409ConflictResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/v2/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/software-statement-assertion':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get a Software Statement Assertion for the given SoftwareStatementId
      tags:
        - Software Statement Assertions
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementAssertion200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/v2/organisation/{OrganisationType}/{OrganisationId}/certificate':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get the certificates for the given organisation
      tags:
        - Organisation Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/v2/organisation/{OrganisationType}/{OrganisationId}/certificate/{OrganisationCertificateType}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/OrganisationCertificateType'
    post:
      summary: Store or create a new certificate of the given OrganisationCertificateType for the given organisation
      tags:
        - Organisation Certificates
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/OrganisationCertificateType'
      requestBody:
        $ref: '#/components/requestBodies/CertificateOrKey'
      responses:
        '201':
          $ref: '#/components/responses/CertificateOrKey201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get the certificates of the given OrganisationCertificateType for the given oranisation
      tags:
        - Organisation Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/v2/organisation/{OrganisationType}/{OrganisationId}/certificate/{OrganisationCertificateType}/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationCertificateType'
      - $ref: '#/components/parameters/CertificateOrKeyId'
    get:
      summary: Get a certificate with the given CertificateOrKeyId for the given organisation
      tags:
        - Organisation Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificateOrKeyGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/v2/organisation/{OrganisationType}/{OrganisationId}/certificate/kid/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/CertificateOrKeyId'
    get:
      summary: Retrieve a certificate with the given CertificateOrKeyId
      tags:
        - Organisation Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificateOrKeyGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    delete:
      summary: Revoke or remove a certificate with the given CertificateOrKeyId
      tags:
        - Organisation Certificates
      responses:
        '204':
          $ref: '#/components/responses/204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/v2/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/certificate':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get certificates for the given software statement
      tags:
        - Software Statement Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/v2/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/certificate/{SoftwareStatementCertificateOrKeyType}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'
    post:
      summary: Add a key or create a new certificate for the given software statement
      tags:
        - Software Statement Certificates
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
      requestBody:
        $ref: '#/components/requestBodies/CertificateOrKey'
      responses:
        '201':
          $ref: '#/components/responses/CertificateOrKey201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get the certificates of the given type for the given software statement
      tags:
        - Software Statement Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/v2/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/certificate/{OrganisationAssociativeCertificateType}/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/OrganisationAssociativeCertificateType'
      - $ref: '#/components/parameters/CertificateOrKeyId'
    put:
      summary: Associate/de-associate a QSEAL/OBSEAL certificate with the given software statement
      tags:
        - Certificate Associations
      requestBody:
        $ref: '#/components/requestBodies/CertificateOrKeyAssociation'
      responses:
        '200':
          $ref: '#/components/responses/CertificateAssociatedWithASoftwareStatement200AcceptedResponse'
        '204':
          $ref: '#/components/responses/204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '409':
          $ref: '#/components/responses/409ConflictResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get the certificate of the given type and ID for the given software statement
      tags:
        - Software Statement Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificateOrKeyGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/v2/organisation/{OrganisationType}/{OrganisationId}/authorisation-server':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get all Authorisation Servers for the given organisation
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServersResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    post:
      summary: Create an Authorisation Server for the given organisation
      tags:
        - Authorisation Servers
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationServer'
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationServerResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/v2/organisation/{OrganisationType}/{OrganisationId}/authorisation-server/{AuthorisationServerId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
    get:
      summary: Get .well-known entity
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServerResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      summary: Update .well-known entity
      tags:
        - Authorisation Servers
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationServer'
      responses:
        '202':
          $ref: '#/components/responses/AuthorisationServer202AcceptedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    delete:
      summary: Delete an Authorisation Server
      tags:
        - Authorisation Servers
      responses:
        '204':
          $ref: '#/components/responses/204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
components:
  parameters:
    AuthorisationServerId:
      name: AuthorisationServerId
      description: The authorisation server Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationServerIdSchema'
    CertificateOrKeyId:
      name: CertificateOrKeyId
      description: The certificate or key Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CertificateOrKeyIdSchema'
    ContactType:
      name: ContactType
      description: The contact type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ContactTypeSchema'
    OrganisationType:
      name: OrganisationType
      description: OB Organisation Type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationTypeSchema'
    OrganisationCertificateType:
      name: OrganisationCertificateType
      description: The certificate type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationCertificateTypeSchema'
    OrganisationAssociativeCertificateType:
      name: OrganisationAssociativeCertificateType
      description: The certificate type that can be associated with a software statement
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAssociativeCertificateTypeSchema'
    OrganisationId:
      name: OrganisationId
      description: The organsation ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationIdSchema'
    SoftwareStatementCertificateOrKeyType:
      name: SoftwareStatementCertificateOrKeyType
      description: The certificate or key type that can be associated with a software statement
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementCertificateOrKeyTypeSchema'
    SoftwareStatementId:
      name: SoftwareStatementId
      description: The software statement ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementIdSchema'
  requestBodies:
    AuthorisationServer:
      description: Properties to create/update authorisation server
      required: true
      content:
        application/vnd.openbanking.directory.authorisationserver-v2+json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerRequestSchema'
    Contact:
      description: Properties to update business/technical contacts
      required: true
      content:
        application/vnd.openbanking.directory.orgcontacts-v2+json:
          schema:
            $ref: '#/components/schemas/ContactSchema'
    CertificateOrKey:
      description: PEM file
      required: true
      content:
        application/x-pem-file:
          schema:
            $ref: '#/components/schemas/CertificateOrKeySchema'
    CertificateOrKeyAssociation:
      description: Certificate or Key Association Payload
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyAssociationSchema'
    Enrol:
      description: Properties to enrol an eIDAS QWAC-bearing TPP onto the Open Banking Directory (required fields to be validated)
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnrolSchema'
    SoftwareStatement:
      description: Software Statement payload
      required: true
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementCreateSchema'
    SoftwareStatementRedirectURI:
      description: Software Statement Redirect URI
      required: true
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/SoftwareStatementRedirectURISchema'
    SoftwareStatementState:
      description: Payload used to deactivate/reactivate a Software Statement
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementStateSchema'
  responses:
    201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    204NoContentResponse:
      description: No Content
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    400BadRequestResponse:
      description: Bad Request
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    401UnauthorizedResponse:
      description: Unauthorized
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    403ForbiddenResponse:
      description: Forbidden
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    404NotFoundResponse:
      description: Not found
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    406NotAcceptableResponse:
      description: Not Acceptable
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    409ConflictResponse:
      description: Conflict
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    502BadGatewayResponse:
      description: Bad Gateway
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    500InternalServerErrorResponse:
      description: Internal Server Error
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    AuthorisationServerResponse:
      description: OK
      content:
        application/vnd.openbanking.directory.authorisationserver-v2+json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    AuthorisationServer202AcceptedResponse:
      description: Accepted
      content:
        application/vnd.openbanking.directory.authorisationserver-v2+json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    AuthorisationServersResponse:
      description: OK
      content:
        application/vnd.openbanking.directory.authorisationserver-list-v2+json:
          schema:
            $ref: '#/components/schemas/AuthorisationServersSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificatesOrKeysGet200OKResponse:
      description: OK
      content:
        application/jwk-set+json:
          schema:
            $ref: '#/components/schemas/CertificatesOrKeysGetSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificateOrKeyGet200OKResponse:
      description: OK
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificateOrKey201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    CertificateOrKey202AcceptedResponse:
      description: Accepted
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    CertificateAssociatedWithASoftwareStatement200AcceptedResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    Contact200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.orgcontacts-v2+json:
          schema:
            $ref: '#/components/schemas/ContactSchema'
    Enrol201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enrol201CreatedResponseSchema'
    Enrol400BadRequestResponse:
      description: Bad Request
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enrol400BadRequestResponseSchema'
    OrganisationsGetFromSCIM200OKResponse:
      description: |
        List of the organisation - TODO SCHEMA NEEDS TO BE DEFINED, SOURCED FROM SCIM + OTHER RESPONSE CODES
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/OrganisationsGetFromSCIM200OKResponseSchema'
    OrganisationGetFromSCIM200OKResponse:
      description: |
        Full details of the organisation - TODO SCHEMA NEEDS TO BE DEFINED, SOURCED FROM SCIM + OTHER RESPONSE CODES
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/OrganisationGetFromSCIM200OKResponseSchema'
    SoftwareStatementsGet200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-list-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementsSchema'
    SoftwareStatementAssertion200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jws+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementAssertionSchema'
    SoftwareStatement201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
    SoftwareStatementUpdated200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
    SoftwareStatementGet200OKResponse:
      description: Get the software statements with the given id
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
  schemas:
    AuthorisationServerRequestSchema:
      type: object
      properties:
        AutoRegistrationSupported:
          type: boolean
        BaseApiDNSUri:
          type: string
          format: uri
          maxLength: 256
        CustomerFriendlyDescription:
          type: string
          maxLength: 256
        CustomerFriendlyLogoUri:
          type: string
          format: uri
          maxLength: 256
        CustomerFriendlyName:
          type: string
          maxLength: 256
        DeveloperPortalUri:
          type: string
          format: uri
          maxLength: 256
        TermsOfService:
          type: string
          format: uri
          maxLength: 256
        OpenIDConfigEndPointUri:
          type: string
          format: uri
          maxLength: 256
        PayloadSigningCertLocation:
          type: string
          format: uri
          maxLength: 256
        EISCDId:
          type: array
          items:
            type: string
            maxLength: 256
        ParentAuthorisationServerId:
          type: string
          maxLength: 22
    AuthorisationServerSchema:
      type: object
      properties:
        Id:
          type: string
          maxLength: 22
        AutoRegistrationSupported:
          type: boolean
        BaseApiDNSUri:
          type: string
          format: uri
          maxLength: 256
        CustomerFriendlyDescription:
          type: string
          maxLength: 256
        CustomerFriendlyLogoUri:
          type: string
          format: uri
          maxLength: 256
        CustomerFriendlyName:
          type: string
          maxLength: 256
        DeveloperPortalUri:
          type: string
          format: uri
          maxLength: 256
        TermsOfService:
          type: string
          format: uri
          maxLength: 256
        OpenIDConfigEndPointUri:
          type: string
          format: uri
          maxLength: 256
        PayloadSigningCertLocation:
          type: string
          format: uri
          maxLength: 256
        EISCDId:
          type: array
          items:
            type: string
            maxLength: 256
        ParentAuthorisationServerId:
          type: string
          maxLength: 22
    AuthorisationServersSchema:
      type: array
      items:
        $ref: '#/components/schemas/AuthorisationServerSchema'
    AuthorisationServerIdSchema:
      type: string
      maxLength: 22
    CertificateOrKeySchema:
      type: string
    CertificateOrKeyIdSchema:
      type: string
      maxLength: 256
    CertificateOrKeyAssociationSchema:
      type: object
      properties:
        associate:
          type: boolean
    CertificatesOrKeysGetSchema:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    CertificateOrKeyGetSchema:
      type: object
      properties:
        obOrganisationId:
          description: OB organisation Id
          type: string
        softwareStatementId:
          description: Software Statement Id
          type: string
        status:
          type: string
        e:
          type: string
        keyType:
          type: string
        kid:
          type: string
        kty:
          type: string
        n:
          type: string
        use:
          type: string
        x5c:
          type: string
        x5t:
          type: string
        x5t#S256:
          type: string
        x5u:
          type: string
    ContactSchema:
      type: object
      properties:
        EmailAddress:
          type: string
          maxLength: 18
        PhoneNumber:
          type: string
          maxLength: 18
    ContactTypeSchema:
      type: string
      enum:
        - business
        - technical
    EnrolSchema:
      type: object
      properties:
        redirect_uris:
          type: array
          items:
            type: string
            format: uri
        token_endpoint_auth_method:
          type: string
        grant_types:
          type: array
          items:
            type: string
        response_types:
          type: array
          items:
            type: string
        client_name:
          type: string
        client_uri:
          type: string
          format: uri
        logo_uri:
          type: string
          format: uri
        scope:
          type: string
        contacts:
          type: array
          items:
            type: string
            format: email
        tos_uri:
          type: string
          format: uri
        policy_uri:
          type: string
          format: uri
        jwks_uri:
          type: string
          format: uri
        jwks:
          type: object
        software_id:
          type: string
        software_version:
          type: string
      required:
        - redirect_uris
        - token_endpoint_auth_method
        - grant_types
        - response_types
        - client_name
        - client_uri
        - logo_uri
        - scope
        - contacts
        - tos_uri
        - policy_uri
        - jwks_uri
        - jwks
        - software_id
        - software_version
    Enrol201CreatedResponseSchema:
      description: >-
        A JSON object DCR response returned when client gets created.
      type: object
      properties:
        client_id:
          description: Client ID assigned by Open Banking Directory
          type: string
          minLength: 18
          maxLength: 18
        client_secret:
          description: Client secret generated by Open Banking Directory
          type: string
        client_id_issued_at:
          description: Timestamp
          type: integer
        client_secret_expires_at:
          description: Timestamp
          type: integer
        ob_org_id:
          description: Organisation ID assigned by Open Banking   Directory
          type: string
          minLength: 18
          maxLength: 18
        redirect_uris:
          description: Array of Redirection URI values used by the Client, as supplied by the client
          type: array
          items:
            type: string
            format: uri
          minItems: 1
        token_endpoint_auth_method:
          description: client_secret_post
          type: string
        grant_types:
          description: client_credentials
          type: string
        response_types:
          description: client_credentials
          type: string
        scope:
          description: ASPSPFullAccess
          type: string
        client_name:
          description: ORG name ar per eIDAS certificate
          type: string
        client_uri:
          description: URI string of a web page providing information about the client
          type: string
          format: uri
        logo_uri:
          description: Client ID assigned by Open Banking Directory
          type: string
          format: uri
        contacts:
          description: Contacts to departments responsible for the client
          type: array
          items:
            type: string
            format: uri
          minItems: 1
        tos_uri:
          description: URI string that points to a human-readable terms of service document for the client
          type: string
          format: uri
        policy_uri:
          description: URI string that points to a human-readable privacy policy document
          type: string
          format: uri
        jwks_uri:
          description: URI string referencing the client's JSON Web Key (JWK) Set
          type: string
          format: uri
        jwks:
          description: Client's JSON Web Key Set [RFC7517] document value
          type: object
        software_id:
          description: UUID4 string
          type: string
        software_version:
          description: Client-supplied software version string
          type: string
    Enrol400BadRequestResponseSchema:
      type: object
      properties:
        error:
          description:  Error type
          type: string
          enum:
            - invalid_redirect_uri
            - invalid_client_metadata
            - invalid_software_statement
            - unapproved_software_statement
        error_description:
          description: A more detailed error description
          type: string
    OrganisationCertificateTypeSchema:
      type: string
      enum:
        - qwac
        - qseal
        - obwac
        - obseal
    OrganisationAssociativeCertificateTypeSchema:
      type: string
      enum:
        - qseal
        - obseal
    OrganisationTypeSchema:
      type: string
      enum:
        - aspsp
        - tpp
    OrganisationIdSchema:
      type: string
    OrganisationsGetFromSCIM200OKResponseSchema:
      type: array
      items:
        type: object
    OrganisationGetFromSCIM200OKResponseSchema:
      type: object
    SoftwareStatementCertificateOrKeyTypeSchema:
      type: string
      enum:
        - obtransport
        - obsigning
        - sigkey
        - enckey
    SoftwareStatementCreateSchema:
      type: object
      properties:
        ClientName:
          type: string
          description: Software Statement client name
          maxLength: 40
        Description:
          type: string
          description: Software Statement description
          maxLength: 256
        OnBehalfOfObOrganisation:
          type: string
          description: Organisation Id
          maxLength: 22
        PolicyUri:
          type: string
          format: uri
          description: The Software Statement policy URI
          maxLength: 256
        ClientUri:
          type: string
          format: uri
          description: The Software Statement client URI
          maxLength: 256
        LogoUri:
          type: string
          format: uri
          description: The Software Statement logo URI
          maxLength: 256
        RedirectUri:
          type: array
          items:
            type: string
            format: uri
            maxLength: 256
          description: The Software Statement redirect URIs
        Roles:
          type: array
          items:
            type: string
            maxLength: 256
          description: The list of Software Statement roles
        TermsOfServiceUri:
          type: string
          format: uri
          description: The Software Statement terms of service URI
          maxLength: 256
        Version:
          type: number
          description: Software Statement version as provided by the organisation's PTC
    SoftwareStatementSchema:
      type: object
      properties:
        Active:
          type: boolean
          description: Software Statement active/inactive flag
        ClientId:
          type: string
          description: Software Statement client Id
          maxLength: 22
        ClientName:
          type: string
          description: Software Statement client name
          maxLength: 40
        Description:
          type: string
          description: Software Statement description
          maxLength: 256
        Id:
          $ref: '#/components/schemas/SoftwareStatementIdSchema'
        Mode:
          type: string
          enum:
            - Live
            - Not Live
          description: Software Statement mode
          maxLength: 8
        ObClientCreated:
          type: boolean
          description: Client created flag
        OnBehalfOfObOrganisation:
          type: string
          description: Organisation Id
          maxLength: 22
        PolicyUri:
          type: string
          format: uri
          description: The Software Statement policy URI
          maxLength: 256
        ClientUri:
          type: string
          format: uri
          description: The Software Statement client URI
          maxLength: 256
        LogoUri:
          type: string
          format: uri
          description: The Software Statement logo URI
          maxLength: 256
        RedirectUri:
          type: array
          items:
            type: string
            format: uri
          description: The Software Statement redirect URI
          maxLength: 256
        Roles:
          type: array
          items:
            type: string
            maxLength: 256
          description: The list of Software Statement roles
        SigningKeyIds:
          type: array
          items:
            type: string
          description: The list of signing certificate Ids
        TermsOfServiceUri:
          type: string
          format: uri
          description: The Software Statement terms of service URI
          maxLength: 256
        TransportKeyIds:
          type: array
          items:
            type: string
          description: The list of transport certificate Ids
        Version:
          type: number
          description: Software Statement version as provided by the organisation's PTC
    SoftwareStatementAssertionSchema:
      type: string
      description: A signed JWT (JWS)
    SoftwareStatementsSchema:
      type: array
      items:
        $ref: '#/components/schemas/SoftwareStatementSchema'
      description: The list of Software Statements
    SoftwareStatementIdSchema:
      type: string
      description: Software Statement Id
      maxLength: 22
    SoftwareStatementStateSchema:
      type: object
      properties:
        Active:
          type: boolean
          enum:
            - true
            - false
      description: Software Statement State
    SoftwareStatementRedirectURISchema:
      type: string
      format: uri
    UniqueRequestIdSchema:
      type: string
      description: Unique Request Id. Give it to the Support Desk if you eve need help with a request that does not work the way you expected.
      