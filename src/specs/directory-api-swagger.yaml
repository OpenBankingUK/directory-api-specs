openapi: 3.0.0
info:
  title: Open Banking Directory API
  version: 0.0.1
  description: >

    ## Status

    There's a number of points that need to be progressed into next version:
    
    * Need to ensure that all required operations are covered.
    
    * Add `operationId` (suggest this is automated).


    * `org_type` is used as a means for differentiating between TPPs and ASPSP. However, from an entity modeling point of view it's difficult to make it "fit" so is included where is required, but ideally should be implied by the consumer identity

    * `organisationId` is included in the API model as it *may* be meaningful to a consumer i.e. a consumer of the API may have knowledge of and wish consume multiple organisations.  Should `/organisation/{organisationId}` be part of every `path`? If this could be removed it would make the design more elegant.

    * The `PUT` methods in the [original design](https://openbanking.atlassian.net/wiki/spaces/DEV/pages/465044232/DRAFT+PROPOSAL+API+First+Updates+to+the+Technical+Directory+APIs+and+Microservices.+TechDirectory+API+v2) have been changed to `PATCH`, allowing partial updates.
    
    * [JSON Merge Patch](https://tools.ietf.org/html/rfc7396) appears to be a good option for implementing the `PATCH` method in this API.

    * The `PATCH` operations echo back the updated entity in the response payload. Whilst unconventional (typically a `204` would be returned) there has been feedback from the front-end team that this is feature is useful. It is only implemented where specified in the original design.

    * Suggest that this specification is split between internal & external i.e. oauth-clients/everything else - but left it all together for the moment.
    
    * Added appropriate error response payload.
    
    * Added JSON API properties. Need to confirm that these are useful/warranted.
    
    * Pulled a subset of HTTP response codes that are implemented in Open Banking standards. To to verify and add/remove accordingly.
    
    * Need to map responses/errors from Ping into this specification.
    
    ## JSON Merge Patch
    
    "Rules" of JSON Merge Path are as follows:


      * If an item is omitted in the source do nothing to the target.

      * If the value of an item is `null` remove it from the target.

      * If a new property is in the source add it to the target.

      * Do this with the bounds of the schema.
    
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/organisation/{OrganisationType}':
    post:
      summary: Enrol a eIDAS QWAC-bearing participant
      description: Enrol an eIDAS QWAC certificate-bearing participant onto the Open Banking Directory. Currenty only TPPs can use this enrolment endpoint, so please set `OrganisationType` to `tpp`
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
      requestBody:
        $ref: '#/components/requestBodies/Enrol'
      responses:
        '201':
          $ref: '#/components/responses/Enrol201CreatedResponse'
        '400':
          $ref: '#/components/responses/Enrol400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get all organisations that the client is authorised to retrieve
      description: Note that this was not in the original design but is included to inform the client
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationsGetFromSCIM200OKResponse'
  '/organisation/{OrganisationType}/{OrganisationId}':
    get:
      summary: Get the given organisation's details
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationGetFromSCIM200OKResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/contact/{ContactType}':
    get:
      summary: Get the business or the technical contacts for the given organisation
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactType'
      responses:
        '200':
          $ref: '#/components/responses/Contact200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      summary: Update the business or the technical contacts for the given organisation
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactType'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/organisation/{OrganisationType}/{OrganisationId}/software-statement':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get all software statements for the given organisation
      tags:
        - Software Statements
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementsGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    post:
      summary: Create a software statement
      tags:
        - Software Statements
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatement'
      responses:
        '201':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get a software statement
      tags:
        - Software Statements
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      summary: Update a software statement
      tags:
        - Software Statements
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementState'
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementUpdated200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/oauth-clients':
    get:
      summary: Get all OAuth clients
      tags:
        - OAuth Clients
      responses:
        200:
          $ref: '#/responses/OAuthClients'
    post:
      summary: Create a new OAuth client
      tags:
        - OAuth Clients
      parameters:
        - $ref: '#/parameters/CreateOAuthClient'
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/oauth-client/{clientId}':
    patch:
      summary: Update an OAuth client
      description: Activate/deactive an OAuth client
      tags:
        - OAuth Clients
      parameters:
        - $ref: '#/parameters/ClientId'
        - $ref: '#/parameters/UpdateOAuthClient'
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/certificate':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get the certificates for the given organisation
      tags:
        - Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/certificate/{OrganisationCertificateType}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/OrganisationCertificateType'
    get:
      summary: Get the certificates of the given type for the given oranisation
      tags:
        - Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    post:
      summary: Store or create a new certificate of the given type for the given organisation
      tags:
        - Certificates
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/OrganisationCertificateType'
      requestBody:
        $ref: '#/components/requestBodies/CertificateOrKey'
      responses:
        '202':
          $ref: '#/components/responses/CertificateOrKey202AcceptedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisations/{OrganisationType}/{OrganisationId}/certificates/{OrganisationCertificateType}/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/OrganisationCertificateType'
      - $ref: '#/components/parameters/CertificateOrKeyId'
    get:
      summary: Get a certificate of the gicen type for the given organisation
      tags:
        - Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificateOrKeyGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    delete:
      summary: Revoke or remove a certificate for the given organisation
      tags:
        - Certificates
      responses:
        '204':
          $ref: '#/components/responses/Certificate204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/certificate/{OrganisationAssociativeCertificateType}/{CertificateOrKeyId}/software-statement/{SoftwareStatementId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/OrganisationAssociativeCertificateType'
      - $ref: '#/components/parameters/CertificateOrKeyId'
    get:
      summary: Get a QSEAL/OBSEAL certificate for the given organisation and software statement
      tags:
        - Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificateOrKeyGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      summary: Associate/de-associate a QSEAL/OBSEAL certificate with the given software statement
      tags:
        - Certificates
      responses:
        '202':
          $ref: '#/components/responses/CertificateOrKey202AcceptedResponse'
        '204':
          $ref: '#/components/responses/Certificate204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/certificate':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get certificates for the given software statement
      tags:
        - Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/certificate/{SoftwareStatementCertificateOrKeyType}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'
    get:
      summary: Get the certificates of the given type for the given software statement
      tags:
        - Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    post:
      summary: Add a key or create a new certificate for the given software statement
      tags:
        - Certificates
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
      requestBody:
        $ref: '#/components/requestBodies/CertificateOrKey'
      responses:
        '202':
          $ref: '#/components/responses/CertificateOrKey202AcceptedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisations/{OrganisationType}/{OrganisationId}/software-statements/{SoftwareStatementId}/certificates/{SoftwareStatementCertificateOrKeyType}/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'
      - $ref: '#/components/parameters/CertificateOrKeyId'
    get:
      summary: Get the certificate associated with the given software statement
      tags:
        - Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificateOrKeyGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    delete:
      summary: Revoke a certificate or remove a key
      tags:
        - Certificates
      responses:
        '204':
          $ref: '#/components/responses/Certificate204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisations/{organisationId}/authorisation-servers':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get all .well-known entities for an organisation
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/responses/AuthorisationServers'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    post:
      summary: Create a .well-known entity
      tags:
        - Authorisation Servers
      parameters:
        - $ref: '#/parameters/CreateAuthorisationServer'
      responses:
        '201':
          $ref: '#/responses/AuthorisationServerId'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisations/{OrganisationType}/{organisationId}/authorisation-servers/{authorisationServerId}':
    parameters:
      - $ref: '#/parameters/OrganisationId'
      - $ref: '#/parameters/AuthorisationServerId'
    get:
      summary: Get .well-known entity
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/responses/AuthorisationServer'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    patch:
      summary: Update .well-known entity
      tags:
        - Authorisation Servers
      parameters:
        - $ref: '#/parameters/UpdateAuthorisationServer'
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    delete:
      summary: Delete a .well-known entity
      tags:
        - Authorisation Servers
      responses:
        '204':
          description: Deleted
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
components:
  parameters:
    CertificateOrKeyId:
      name: CertificateOrKeyId
      description: The certificate or key Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CertificateOrKeyIdSchema'
    ContactType:
      name: ContactType
      description: The contact type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ContactTypeSchema'
    OrganisationType:
      name: OrganisationType
      description: OB Organisation Type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationTypeSchema'
    OrganisationCertificateType:
      name: OrganisationCertificateType
      description: The certificate type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationCertificateTypeSchema'
    OrganisationAssociativeCertificateType:
      name: OrganisationAssociativeCertificateType
      description: The certificate type that can be associated with a software statement
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAssociativeCertificateTypeSchema'
    OrganisationId:
      name: OrganisationId
      description: The organsation ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationIdSchema'
    SoftwareStatementCertificateOrKeyType:
      name: SoftwareStatementCertificateOrKeyType
      description: The certificate or key type that can be associated with a software statement
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementCertificateOrKeyTypeSchema'
    SoftwareStatementId:
      name: SoftwareStatementId
      description: The software statement ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementIdSchema'
  requestBodies:
    Contact:
      description: Properties to update business/technical contacts
      required: true
      content:
        application/vnd.openbanking.directory.orgcontact-v2+json:
          schema:
            $ref: '#/components/schemas/ContactSchema'
    CertificateOrKey:
      description: PEM file
      required: true
      content:
        application/x-pem-file:
          schema:
            $ref: '#/components/schemas/CertificateOrKeySchema'
    Enrol:
      description: Properties to enrol an eIDAS QWAC-bearing TPP onto the Open Banking Directory (required fields to be validated)
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnrolSchema'
    SoftwareStatement:
      description: Software Statement payload
      required: true
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementCreateSchema'
    SoftwareStatementState:
      description: Payload used to deactivate/reactivate a Software Statement
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementStateSchema'
  responses:
    400BadRequestResponse:
      description: Bad Request
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    401UnauthorizedResponse:
      description: Unauthorized
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    403ForbiddenResponse:
      description: Forbidden
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    404NotFoundResponse:
      description: Not found
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    502BadGatewayResponse:
      description: Bad Gateway
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    500InternalServerErrorResponse:
      description: Internal Server Error
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificatesOrKeysGet200OKResponse:
      description: OK
      content:
        application/jwk-set+json:
          schema:
            $ref: '#/components/schemas/CertificatesOrKeysGetSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificateOrKeyGet200OKResponse:
      description: OK
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificateOrKey202AcceptedResponse:
      description: Accepted
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    Certificate204NoContentResponse:
      description: No Content
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    Contact200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.orgcontact-v2+json:
          schema:
            $ref: '#/components/schemas/ContactSchema'
    Enrol201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enrol201CreatedResponseSchema'
    Enrol400BadRequestResponse:
      description: Bad Request
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enrol400BadRequestResponseSchema'
    OrganisationsGetFromSCIM200OKResponse:
      description: |
        List of the organisation - TODO SCHEMA NEEDS TO BE DEFINED, SOURCED FROM SCIM + OTHER RESPONSE CODES
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/OrganisationsGetFromSCIM200OKResponseSchema'
    OrganisationGetFromSCIM200OKResponse:
      description: |
        Full details of the organisation - TODO SCHEMA NEEDS TO BE DEFINED, SOURCED FROM SCIM + OTHER RESPONSE CODES
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/OrganisationGetFromSCIM200OKResponseSchema'
    SoftwareStatementsGet200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementsSchema'
    SoftwareStatement201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
    SoftwareStatementUpdated200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
    SoftwareStatementGet200OKResponse:
      description: Get the software statements with the given id
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
  schemas:
    CertificateOrKeySchema:
      type: string
    CertificateOrKeyIdSchema:
      type: string
    CertificatesOrKeysGetSchema:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    CertificateOrKeyGetSchema:
      type: object
      properties:
        obOrganisationId:
          description: OB organisation Id
          type: string
        softwareStatementId:
          description: Software Statement Id
          type: string
        status:
          type: string
        e:
          type: string
        keyType:
          type: string
        kid:
          type: string
        kty:
          type: string
        n:
          type: string
        use:
          type: string
        x5c:
          type: string
        x5t:
          type: string
        x5t#256s:
          type: string
        x5u:
          type: string
    ContactSchema:
      type: object
      properties:
        EmailAddress:
          type: string
        PhoneNumber:
          type: string
    ContactTypeSchema:
      type: string
      enum:
        - business
        - technical
    EnrolSchema:
      type: object
      properties:
        redirect_uris:
          type: array
          items:
            type: string
            format: uri
        token_endpoint_auth_method:
          type: string
        grant_types:
          type: array
          items:
            type: string
        response_types:
          type: array
          items:
            type: string
        client_name:
          type: string
        client_uri:
          type: string
          format: uri
        logo_uri:
          type: string
          format: uri
        scope:
          type: string
        contacts:
          type: array
          items:
            type: string
            format: email
        tos_uri:
          type: string
          format: uri
        policy_uri:
          type: string
          format: uri
        jwks_uri:
          type: string
          format: uri
        jwks:
          type: object
        software_id:
          type: string
        software_version:
          type: string
      required:
        - redirect_uris
        - token_endpoint_auth_method
        - grant_types
        - response_types
        - client_name
        - client_uri
        - logo_uri
        - scope
        - contacts
        - tos_uri
        - policy_uri
        - jwks_uri
        - jwks
        - software_id
        - software_version
    Enrol201CreatedResponseSchema:
      description: >-
        A JSON object DCR response returned when client gets created.
      type: object
      properties:
        client_id:
          description: Client ID assigned by Open Banking Directory
          type: string
          minLength: 18
          maxLength: 18
        client_secret:
          description: Client secret generated by Open Banking Directory
          type: string
        client_id_issued_at:
          description: Timestamp
          type: integer
        client_secret_expires_at:
          description: Timestamp
          type: integer
        ob_org_id:
          description: Organisation ID assigned by Open Banking   Directory
          type: string
          minLength: 18
          maxLength: 18
        redirect_uris:
          description: Array of Redirection URI values used by the Client, as supplied by the client
          type: array
          items:
            type: string
            format: uri
          minItems: 1
        token_endpoint_auth_method:
          description: client_secret_post
          type: string
        grant_types:
          description: client_credentials
          type: string
        response_types:
          description: client_credentials
          type: string
        scope:
          description: ASPSPFullAccess
          type: string
        client_name:
          description: ORG name ar per eIDAS certificate
          type: string
        client_uri:
          description: URI string of a web page providing information about the client
          type: string
          format: uri
        logo_uri:
          description: Client ID assigned by Open Banking Directory
          type: string
          format: uri
        contacts:
          description: Contacts to departments responsible for the client
          type: array
          items:
            type: string
            format: uri
          minItems: 1
        tos_uri:
          description: URI string that points to a human-readable terms of service document for the client
          type: string
          format: uri
        policy_uri:
          description: URI string that points to a human-readable privacy policy document
          type: string
          format: uri
        jwks_uri:
          description: URI string referencing the client's JSON Web Key (JWK) Set
          type: string
          format: uri
        jwks:
          description: Client's JSON Web Key Set [RFC7517] document value
          type: object
        software_id:
          description: UUID4 string
          type: string
        software_version:
          description: Client-supplied software version string
          type: string
    Enrol400BadRequestResponseSchema:
      type: object
      properties:
        error:
          description:  Error type
          type: string
          enum:
            - invalid_redirect_uri
            - invalid_client_metadata
            - invalid_software_statement
            - unapproved_software_statement
        error_description:
          description: A more detailed error description
          type: string
    OrganisationCertificateTypeSchema:
      type: string
      enum:
        - qwac
        - qseal
        - obwac
        - obseal
    OrganisationAssociativeCertificateTypeSchema:
      type: string
      enum:
        - qseal
        - obseal
    OrganisationTypeSchema:
      type: string
      enum:
        - aspsp
        - tpp
    OrganisationIdSchema:
      type: string
    OrganisationsGetFromSCIM200OKResponseSchema:
      type: array
      items:
        type: object
    OrganisationGetFromSCIM200OKResponseSchema:
      type: object
    SoftwareStatementCertificateOrKeyTypeSchema:
      type: string
      enum:
        - obtransport
        - obsigning
        - sigkey
        - enckey
    SoftwareStatementCreateSchema:
      type: object
      properties:
        ClientName:
          type: string
          description: Software Statement client name
        Description:
          type: string
          description: Software Statement description
        OnBehalfOfObOrganisation:
          type: string
          description: Organisation Id
        PolicyUri:
          type: string
          format: uri
          description: The Software Statement policy URI
        ClientUri:
          type: string
          format: uri
          description: The Software Statement client URI
        LogoUri:
          type: string
          format: uri
          description: The Software Statement logo URI
        RedirectUri:
          type: array
          items:
            type: string
            format: uri
          description: The Software Statement redirect URI
        Roles:
          type: array
          items:
            type: string
            format: uri
          description: The list of Software Statement roles
        TermsOfServiceUri:
          type: string
          format: uri
          description: The Software Statement terms of service URI
        Version:
          type: string
          description: Software Statement version as provided by the organisation's PTC
    SoftwareStatementSchema:
      type: object
      properties:
        Active:
          type: boolean
          description: Software Statement active/inactive flag
        ClientId:
          type: string
          description: Software Statement client Id
        ClientName:
          type: string
          description: Software Statement client name
        Description:
          type: string
          description: Software Statement description
        Id:
          $ref: '#/components/schemas/SoftwareStatementIdSchema'
        Mode:
          type: string
          description: Software Statement mode
        ObClientCreated:
          type: boolean
          description: Client created flag
        OnBehalfOfObOrganisation:
          type: string
          description: Organisation Id
        PolicyUri:
          type: string
          format: uri
          description: The Software Statement policy URI
        ClientUri:
          type: string
          format: uri
          description: The Software Statement client URI
        LogoUri:
          type: string
          format: uri
          description: The Software Statement logo URI
        RedirectUri:
          type: array
          items:
            type: string
            format: uri
          description: The Software Statement redirect URI
        Roles:
          type: array
          items:
            type: string
          description: The list of Software Statement roles
        SigningKeyIds:
          type: array
          items:
            type: string
          description: The list of signing certificate Ids
        TermsOfServiceUri:
          type: string
          format: uri
          description: The Software Statement terms of service URI
        TransportKeyIds:
          type: array
          items:
            type: string
          description: The list of transport certificate Ids
        Version:
          type: string
          description: Software Statement version as provided by the organisation's PTC
    SoftwareStatementsSchema:
      type: array
      items:
        $ref: '#/components/schemas/SoftwareStatementSchema'
      description: The list of Software Statements
    SoftwareStatementIdSchema:
      type: string
      description: Software Statement Id
    SoftwareStatementStateSchema:
      type: object
      properties:
        Active:
          type: boolean
          enum:
            - true
            - false
      description: Software Statement State
    UniqueRequestIdSchema:
      type: string
      description: Unique Request Id