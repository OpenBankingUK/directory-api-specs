openapi: 3.0.0
info:
  title: Open Banking Directory API
  version: 0.0.1
  description: >

    ## Status

    There's a number of points that need to be progressed into next version:
    
    * Need to ensure that all required operations are covered.
    
    * Add `operationId` (suggest this is automated).


    * `org_type` is used as a means for differentiating between TPPs and ASPSP. However, from an entity modeling point of view it's difficult to make it "fit" so is included where is required, but ideally should be implied by the consumer identity

    * `organisationId` is included in the API model as it *may* be meaningful to a consumer i.e. a consumer of the API may have knowledge of and wish consume multiple organisations.  Should `/organisation/{organisationId}` be part of every `path`? If this could be removed it would make the design more elegant.

    * The `PUT` methods in the [original design](https://openbanking.atlassian.net/wiki/spaces/DEV/pages/465044232/DRAFT+PROPOSAL+API+First+Updates+to+the+Technical+Directory+APIs+and+Microservices.+TechDirectory+API+v2) have been changed to `PATCH`, allowing partial updates.
    
    * [JSON Merge Patch](https://tools.ietf.org/html/rfc7396) appears to be a good option for implementing the `PATCH` method in this API.

    * The `PATCH` operations echo back the updated entity in the response payload. Whilst unconventional (typically a `204` would be returned) there has been feedback from the front-end team that this is feature is useful. It is only implemented where specified in the original design.

    * Suggest that this specification is split between internal & external i.e. oauth-clients/everything else - but left it all together for the moment.
    
    * Added appropriate error response payload.
    
    * Added JSON API properties. Need to confirm that these are useful/warranted.
    
    * Pulled a subset of HTTP response codes that are implemented in Open Banking standards. To to verify and add/remove accordingly.
    
    * Need to map responses/errors from Ping into this specification.
    
    ## JSON Merge Patch
    
    "Rules" of JSON Merge Path are as follows:


      * If an item is omitted in the source do nothing to the target.

      * If the value of an item is `null` remove it from the target.

      * If a new property is in the source add it to the target.

      * Do this with the bounds of the schema.
    
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/organisation/{OrganisationType}':
    post:
      summary: Enrol a eIDAS QWAC-bearing participant
      description: Enrol an eIDAS QWAC certificate-bearing participant onto the Open Banking Directory. Currenty only TPPs can use this enrolment endpoint, so please set `OrganisationType` to `tpp`
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
      requestBody:
        $ref: '#/components/requestBodies/Enrol'
      responses:
        '201':
          $ref: '#/components/responses/Enrol201CreatedResponse'
        '400':
          $ref: '#/components/responses/Enrol400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get all organisations that the consumer is authorised to retrieve
      description: Note that this was not in the original design but is included to inform the client
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationsGetFromSCIM200OKResponse'
  '/organisation/{OrganisationType}/{OrganisationId}':
    get:
      summary: Get all organisation details
      x-draft-endpoint-1: '/organisation/{org_type:string}/{org_id:string}'
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationGetFromSCIM200OKResponse'
              
  '/organisation/{OrganisationType}/{OrganisationId}/contact/{ContactType}':
    get:
      summary: Get all business/technical contacts for an organisation
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactType'
      responses:
        '200':
          $ref: '#/components/responses/Contact200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      summary: Update a given contact
      x-draft-endpoint-1: '/organisation/contacts/business/{org_type:string}/{org_id:string}'
      x-draft-endpoint-2: '/organisation/contacts/technical/{org_type:string}/{org_id:string}'
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactType'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/software-statement':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get all software statements for an organisation
      tags:
        - Software Statements
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementsGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    post:
      x-draft-endpoint-1: '/softwarestatement/{org_type:string}/{org_id:string}'
      summary: Create a software statement
      tags:
        - Software Statements
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
      responses:
        '201':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/Enrol400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get a software statement
      tags:
        - Software Statements
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      x-draft-endpoint-1: '/softwarestatement/active/{softwarestatement_id:string}'
      summary: Update a software statement
      tags:
        - Software Statements
      parameters:
        - $ref: '#/parameters/UpdateSoftwareStatement'
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/oauth-clients':
    get:
      summary: Get all OAuth clients
      tags:
        - OAuth Clients
      responses:
        200:
          $ref: '#/responses/OAuthClients'
    post:
      summary: Create a new OAuth client
      tags:
        - OAuth Clients
      parameters:
        - $ref: '#/parameters/CreateOAuthClient'
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/oauth-client/{clientId}':
    patch:
      x-draft-endpoint-1: '/oauthclient/active/{client_id:string}'
      summary: Update an OAuth client
      description: Activate/deactive an OAuth client
      tags:
        - OAuth Clients
      parameters:
        - $ref: '#/parameters/ClientId'
        - $ref: '#/parameters/UpdateOAuthClient'
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/organisations/{organisationId}/software-statements/{softwareStatementId}/certificates':
    parameters:
      - $ref: '#/parameters/OrganisationId'
      - $ref: '#/parameters/SoftwareStatementId'
    get:
      summary: Get the certificates supporting a software statement
      tags:
        - Certificates
      responses:
        '200':
          $ref: '#/responses/Certificates'
    post:
      x-draft-endpoint-1: >-
        /certificates/openbanking/transport/softwarestatement/{softwarestatement_id:string}
      x-draft-endpoint-2: >-
        /certificates/openbanking/signing/softwarestatement/{softwarestatement_id:string}
      summary: Create a new certificates supporting a software statement
      tags:
        - Certificates
      parameters:
        - $ref: '#/parameters/CreateCertificate'
      responses:
        '201':
          $ref: '#/responses/CertificateId'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/organisations/{organisationId}/software-statements/{softwareStatementId}/certificates/{certificateId}':
    parameters:
      - $ref: '#/parameters/OrganisationId'
      - $ref: '#/parameters/SoftwareStatementId'
      - $ref: '#/parameters/CertificateId'
    get:
      summary: Get a certificate
      tags:
        - Certificates
      responses:
        200:
          $ref: '#/responses/Certificate'
    delete:
      x-draft-endpoint-1: >-
        /certificates/openbanking/transport/softwarestatement/{softwarestatement_id:string}/{certificate_kid:string}
      x-draft-endpoint-2: >-
        /certificates/openbanking/signing/softwarestatement/{softwarestatement_id:string}/{certificate_kid:string}
      summary: Revoke a certificate
      tags:
        - Certificates
      responses:
        '202':
          description: Accepted
        '204':
          description: Deleted
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/organisations/{organisationId}/authorisation-servers':
    parameters:
      - $ref: '#/parameters/OrganisationId'
    get:
      summary: Get all .well-known entities for an organisation
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/responses/AuthorisationServers'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    post:
      x-draft-endpoint-1: '/authorizationserver/{org_id:string}'
      summary: Create a .well-known entity
      tags:
        - Authorisation Servers
      parameters:
        - $ref: '#/parameters/CreateAuthorisationServer'
      responses:
        '201':
          $ref: '#/responses/AuthorisationServerId'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
  '/organisations/{organisationId}/authorisation-servers/{authorisationServerId}':
    parameters:
      - $ref: '#/parameters/OrganisationId'
      - $ref: '#/parameters/AuthorisationServerId'
    get:
      summary: Get .well-known entity
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/responses/AuthorisationServer'
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    patch:
      summary: Update .well-known entity
      tags:
        - Authorisation Servers
      parameters:
        - $ref: '#/parameters/UpdateAuthorisationServer'
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
    delete:
      summary: Delete a .well-known entity
      tags:
        - Authorisation Servers
      responses:
        '204':
          description: Deleted
        '400':
          $ref: '#/responses/400ErrorResponse'
        '401':
          $ref: '#/responses/401ErrorResponse'
        '403':
          $ref: '#/responses/403ErrorResponse'
        '404':
          $ref: '#/responses/404ErrorResponse'
        '500':
          $ref: '#/responses/500ErrorResponse'
parameters:
  AuthorisationServerId:
    name: authorisationServerId
    description: The authorisation server ID
    in: path
    type: string
    required: true
  CertificateId:
    name: certificateId
    description: The certificate ID
    in: path
    type: string
    required: true
  ClientId:
    name: clientId
    description: The client ID
    in: path
    type: string
    required: true
  ContactId:
    name: contactId
    description: The contact ID
    in: path
    type: string
    required: true
  CreateAuthorisationServer:
    name: requestBody
    description: Properties to create a new authorisation server  (required fields to be validated)
    in: body
    schema:
      allOf:
        - type: object
          required:
            - Data
          properties:
            Data:
              type: object
              required:
                - AuthorisationServer
              properties:
                AuthorisationServer:
                  allOf:
                    - $ref: '#/definitions/AuthorisationServer'
                    - required:
                        - AutoRegistrationSupported
                        - BaseApiDNSUri
                        - CustomerFriendlyDescription
                        - CustomerFriendlyLogoUri
                        - CustomerFriendlyName
                        - DeveloperPortalUri
                        - TermsOfService
                        - OpenIDConfigEndPointUri
                        - PayloadSigningCertLocation
    required: true
  CreateCertificate:
    name: requestBody
    description: |
      Create a new certificate allied to a software statement.

      **Approch of encoding certificate in JSON payload requires validation.**
    in: body
    schema:
      type: object
      required:
        - Data
      properties:
        Data:
          type: object
          required:
            - Certificate
          properties:
            Certificate:
              allOf:
                - $ref: '#/definitions/CertificateProperties'
                - required:
                  - Type
                  - Certificate
  CreateOAuthClient:
    name: requestBody
    description: Properties to create a new OAuth Client (required fields to be validated)
    in: body
    schema:
      type: object
      required:
        - Data
      properties:
        Data:
          type: object
          required:
            - OAuthClient
          properties:
            OAuthClient:
              allOf:
                - $ref: '#/definitions/OAuthClientProperties'
                - required:
                  - ClientId
                  - Name
                  - Description
                  - RedirectUris
                  - BypassApprovalPage
                  - RestrictScopes
                  - RefaultAccessTokenManagerRef
                  - RestrictedScopes
                  - ClientAuth
                  - OidcPolicy
                  - JwksSettings
                  - GrantTypes
  CreateSoftwareStatement:
    name: requestBody
    description: Properties to create a software statement (required fields to be validated)
    in: body
    schema:
      type: object
      allOf:
        - $ref: '#/definitions/SoftwareStatementProperties'
        - required:
          - ClientName
          - Description
          - OnBehalfOfObOrganisation
          - PolicyUri
          - ClientUri
          - LogoUri
          - RedirectUri
          - Roles
          - TermsOfServiceUri
          - Version
    
  UpdateAuthorisationServer:
    name: requestBody
    description: Properties to update given authorisation server
    in: body
    schema:
      type: object
      required:
        - Data
      properties:
        Data:
          type: object
          required:
            - AuthorisationServer
          properties:
            AuthorisationServer:
              $ref: '#/definitions/AuthorisationServerProperties'
    required: true
  UpdateContact:
    name: requestBody
    description: Properties to update contact details
    in: body
    schema:
      type: object
      required:
        - Data
      properties:
        Data:
          type: object
          required:
            - Contact
          properties:
            Contact:
              allOf:
                - $ref: '#/definitions/Contact'
                - required:
                    - EmailAddress
                    - PhoneNumber
    required: true
  UpdateOAuthClient:
    name: requestBody
    description: Update an OAuth client  (only updatable properties included)
    in: body
    schema:
      type: object
      required:
       - Data
      properties:
        Data:
          type: object
          required:
            - OAuthClient
          properties:
            OAuthClient:
              type: object
              required:
                - Active
              properties:
                Active:
                  type: boolean
    required: true
  UpdateSoftwareStatement:
    name: requestBody
    description: Update a software statement (only updatable properties included)
    in: body
    schema:
      type: object
      required:
       - Data
      properties:
        Data:
          type: object
          required:
            - SoftwareStatement
          properties:
            SoftwareStement:
              type: object
              properties:
                Active:
                  type: boolean
                RedirectUri:
                  type: array
                  items:
                    type: string
                    format: rui
    required: true
responses:
  AuthorisationServer:
    description: An authorisation server
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              required:
                - AuthorisationServer
              properties:
                AuthorisationServer:
                  $ref: '#/definitions/AuthorisationServer'
        - $ref: '#/definitions/JsonApiLinksMeta'
  AuthorisationServerId:
    description: An authorisation server ID
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              required:
                - AuthorisationServerId
              properties:
                AuthorisationServerId:
                  $ref: '#/definitions/AuthorisationServerId'
        - $ref: '#/definitions/JsonApiLinksMeta'
  AuthorisationServers:
    description: List of authorisation servers
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              properties:
                AuthorisationServers:
                  type: array
                  items:
                    $ref: '#/definitions/AuthorisationServer'
        - $ref: '#/definitions/JsonApiLinksMeta'
  Certificate:
    description: A certificate
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              required:
                - Certificate
              properties:
                Certificate:
                  $ref: '#/definitions/Certificate'
        - $ref: '#/definitions/JsonApiLinksMeta'
  CertificateId:
    description: ID of new certificate
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              required:
                - CertificateId
              properties:
                CertificateId:
                  $ref: '#/definitions/ID'
        - $ref: '#/definitions/JsonApiLinksMeta'
  Certificates:
    description: List of certificates
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              properties:
                Certificates:
                  type: array
                  items:
                    $ref: '#/definitions/Certificate'
        - $ref: '#/definitions/JsonApiLinksMeta'

  Enrol:
    description: List of OAuth clients
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              properties:
                OAuthClients:
                  type: array
                  items:
                    $ref: '#/definitions/OAuthClient'
        - $ref: '#/definitions/JsonApiLinksMeta'
  OAuthClients:
    description: List of OAuth clients
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              properties:
                OAuthClients:
                  type: array
                  items:
                    $ref: '#/definitions/OAuthClient'
        - $ref: '#/definitions/JsonApiLinksMeta'
  SoftwareStatementId:
    description: Software statement ID
    schema:
      type: object
      required:
        - SoftwareStatementId
      properties:
        SoftwareStatementId:
          $ref: '#/definitions/ID'
  SoftwareStatement:
    description: A software statements
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              required:
                - SoftwareStatement
              properties:
                SoftwareStatement:
                  $ref: '#/definitions/SoftwareStatement'
        - $ref: '#/definitions/JsonApiLinksMeta'
  SoftwareStatements:
    description: List of software statements
    schema:
      allOf:
        - type: object
          required:
          - Data
          properties:
            Data:
              type: object
              properties:
                SoftwareStatements:
                  type: array
                  items:
                    $ref: '#/definitions/SoftwareStatement'
        - $ref: '#/definitions/JsonApiLinksMeta'

  200OKResponse:
    description: OK
    headers:
      OB-Request-Id:
        type: string
        description: Unique Request Id.

  201CreatedResponse:
    description: Created
    headers:
      OB-Request-Id:
        type: string
        description: Unique Request Id.

  400ErrorResponse:
    description: Bad Request
    headers:
      OB-Request-Id:
        type: string
        description: Unique Request Id.
    schema:
      $ref: '#/definitions/OBErrorResponse1'

definitions:
  ID:
    description: Generic identifier type
    type: string
  AuthorisationServerId:
    type: string
  AuthorisationServerProperties:
    type: object
    properties:
      AutoRegistrationSupported:
        type: boolean
      BaseApiDNSUri:
        type: string
        format: uri
      CustomerFriendlyDescription:
        type: string
      CustomerFriendlyLogoUri:
        type: string
      CustomerFriendlyName:
        type: string
      DeveloperPortalUri:
        type: string
        format: uri
      TermsOfService:
        type: string
        format: uri
      OpenIDConfigEndPointUri:
        type: string
        format: uri
      PayloadSigningCertLocation:
        type: string
        format: uri
  AuthorisationServer:
    allOf:
      - $ref: '#/definitions/AuthorisationServerProperties'
      - required:
        - AutoRegistrationSupported
        - BaseApiDNSUri
        - CustomerFriendlyDescription
        - CustomerFriendlyLogoUri
        - CustomerFriendlyName
        - DeveloperPortalUri
        - TermsOfService
        - OpenIDConfigEndPointUri
        - PayloadSigningCertLocation
  CertificateProperties:
    type: object
    properties:
      Type:
        type: string
        enum:
          - Transport
          - Signing
      Certificate:
        type: string
  Certificate:
    allOf:
      - type: object
        properties:
          CertificateId:
            $ref: '#/definitions/ID'
      - $ref: '#/definitions/CertificateProperties'
      - required:
        - CertificateId
        - Type
        - Certificate
  Contact:
    type: object
    properties:
      EmailAddress:
        type: string
      PhoneNumber:
        type: string
  
  OAuthClientProperties:
    type: object
    properties:
      ClientId:
        type: string
      Name:
        type: string
      Description:
        type: string
      RedirectUris:
        type: array
        items:
          type: string
          format: uri
      BypassApprovalPage:
        type: boolean
      RestrictScopes:
        type: boolean
      RefaultAccessTokenManagerRef:
        type: string
      RestrictedScopes:
        type: array
        items:
          type: string
      ClientAuth:
        type: object
        properties:
          Type:
            type: string
            enum:
              - CLIENT_SECRET_BASIC
              - CLIENT_SECRET_POST
              - PRIVATE_KEY_JWT
          EnforceReplayPrevention:
            type: boolean
      OidcPolicy:
        type: string
      JwksSettings:
        type: object
        properties:
          JwksUrl:
            type: string
            format: uri
      GrantTypes:
        type: array
        items:
          type: string
          enum:
            - CLIENT_CREDENTIALS
  OAuthClient:
    allOf: 
      - type: object
        properties:
          Active:
            type: boolean
      - $ref: '#/definitions/OAuthClientProperties'
      - required:
        - Active
        - ClientId
        - Name
        - Description
        - RedirectUris
        - BypassApprovalPage
        - RestrictScopes
        - RefaultAccessTokenManagerRef
        - RestrictedScopes
        - ClientAuth
        - OidcPolicy
        - JwksSettings
        - GrantTypes
  SoftwareStatementProperties:
    
  SoftwareStatement:
    allOf:
      - type: object
        properties:
          Active:
            type: boolean
      - $ref: '#/definitions/SoftwareStatementProperties'
      - required:
        - Active
        - ClientName
        - Description
        - OnBehalfOfObOrganisation
        - PolicyUri
        - ClientUri
        - LogoUri
        - RedirectUri
        - Roles
        - TermsOfServiceUri
        - Version
  OBError1:
    type: object
    properties:
      ErrorCode:
        description: 'Low level textual error code, e.g., UK.OBIE.Field.Missing'
        type: string
        minLength: 1
        maxLength: 128
      Message:
        description: >-
          A description of the error that occurred. e.g., 'A mandatory field
          isn't supplied' or 'RequestedExecutionDateTime must be in future'

          OBIE doesn't standardise this field
        type: string
        minLength: 1
        maxLength: 500
      Path:
        description: >-
          Recommended but optional reference to the JSON Path of the field with
          error, e.g., Data.Initiation.InstructedAmount.Currency
        type: string
        minLength: 1
        maxLength: 500
      Url:
        description: >-
          URL to help remediate the problem, or provide more information, or to
          API Reference, or help etc
        type: string
    required:
      - ErrorCode
      - Message
    additionalProperties: false
    minProperties: 1
  OBErrorResponse1:
    description: >-
      An array of detail error codes, and messages, and URLs to documentation to
      help remediation.
    type: object
    properties:
      Code:
        description: 'High level textual error code, to help categorize the errors.'
        type: string
        minLength: 1
        maxLength: 40
      Id:
        description: >-
          A unique reference for the error instance, for audit purposes, in case
          of unknown/unclassified errors.
        type: string
        minLength: 1
        maxLength: 40
      Message:
        description: >-
          Brief Error message, e.g., 'There is something wrong with the request
          parameters provided'
        type: string
        minLength: 1
        maxLength: 500
      Errors:
        items:
          $ref: '#/definitions/OBError1'
        type: array
        minItems: 1
    required:
      - Code
      - Message
      - Errors
    additionalProperties: false
  JsonApiLinksMeta:
    type: object
    properties:
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  Links:
    type: object
    description: Links relevant to the payload
    properties:
      Self:
        description: >-
          A link to the resource that represents this payee (will only be
          returned from lookup if matched or close match)
        type: string
        format: uri
  Meta:
    type: object
    description: Meta Data relevant to the payload



components:
  parameters:
    ContactType:
      name: ContactType
      description: The contact type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ContactTypeSchema'
    OrganisationType:
      name: OrganisationType
      description: OB Organisation Type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationTypeSchema'
    OrganisationId:
      name: OrganisationId
      description: The organsation ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationIdSchema'
    SoftwareStatementId:
      name: SoftwareStatementId
      description: The software statement ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementIdSchema'
  requestBodies:
    Contact:
      description: Properties to update business/technical contacts
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactSchema'
    Enrol:
      description: Properties to enrol an eIDAS QWAC-bearing TPP onto the Open Banking Directory (required fields to be validated)
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnrolSchema'
  responses:
    400BadRequestResponse:
      description: Bad Request
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    401UnauthorizedResponse:
      description: Unauthorized
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    403ForbiddenResponse:
      description: Forbidden
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    404NotFoundResponse:
      description: Not found
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    502BadGatewayResponse:
      description: Bad Gateway
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    500InternalServerErrorResponse:
      description: Internal Server Error
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    Contact200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.orgcontacts-v2+json:
          schema:
            $ref: '#/components/schemas/ContactSchema'
    Enrol201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enrol201CreatedResponseSchema'
    Enrol400BadRequestResponse:
      description: Bad Request
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enrol400BadRequestResponseSchema'
    OrganisationsGetFromSCIM200OKResponse:
      description: |
        List of the organisation - TODO SCHEMA NEEDS TO BE DEFINED, SOURCED FROM SCIM + OTHER RESPONSE CODES
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/OrganisationsGetFromSCIM200OKResponseSchema'
    OrganisationGetFromSCIM200OKResponse:
      description: |
        Full details of the organisation - TODO SCHEMA NEEDS TO BE DEFINED, SOURCED FROM SCIM + OTHER RESPONSE CODES
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/OrganisationGetFromSCIM200OKResponseSchema'
    SoftwareStatementsGet200OKResponse:
      description: The list of all software statements for the given organisation
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatements-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementsGetSchema'
    SoftwareStatement201CreatedResponse:
      description: Create a software statement for the given organisation id
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatements-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatement201CreatedSchema'
    SoftwareStatementGet200OKResponse:
      description: Get the software statements with the given id
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatements-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementGetSchema'
  schemas:
    ContactSchema:
      type: object
      properties:
        EmailAddress:
          type: string
        PhoneNumber:
          type: string
    ContactTypeSchema:
      type: string
      enum:
        - business
        - technical
    EnrolSchema:
      type: object
      additionalProperties:
        type: object
        properties:
          redirect_uris:
            type: array
            items:
              type: string
              format: uri
          token_endpoint_auth_method:
            type: string
          grant_types:
            type: array
            items:
              type: string
          response_types:
            type: array
            items:
              type: string
          client_name:
            type: string
          client_uri:
            type: string
            format: uri
          logo_uri:
            type: string
            format: uri
          scope:
            type: string
          contacts:
            type: array
            items:
              type: string
              format: email
          tos_uri:
            type: string
            format: uri
          policy_uri:
            type: string
            format: uri
          jwks_uri:
            type: string
            format: uri
          jwks:
            type: object
          software_id:
            type: string
          software_version:
            type: string
        required:
          - redirect_uris
          - token_endpoint_auth_method
          - grant_types
          - response_types
          - client_name
          - client_uri
          - logo_uri
          - scope
          - contacts
          - tos_uri
          - policy_uri
          - jwks_uri
          - jwks
          - software_id
          - software_version
    Enrol201CreatedResponseSchema:
      description: >-
        A JSON object DCR response returned when client gets created.
      type: object
      properties:
        client_id:
          description: Client ID assigned by Open Banking Directory
          type: string
          minLength: 18
          maxLength: 18
        client_secret:
          description: Client secret generated by Open Banking Directory
          type: string
        client_id_issued_at:
          description: Timestamp
          type: integer
        client_secret_expires_at:
          description: Timestamp
          type: integer
        ob_org_id:
          description: Organisation ID assigned by Open Banking   Directory
          type: string
          minLength: 18
          maxLength: 18
        redirect_uris:
          description: Array of Redirection URI values used by the Client, as supplied by the client
          type: array
          items:
            type: string
            format: uri
          minItems: 1
        token_endpoint_auth_method:
          description: client_secret_post
          type: string
        grant_types:
          description: client_credentials
          type: string
        response_types:
          description: client_credentials
          type: string
        scope:
          description: ASPSPFullAccess
          type: string
        client_name:
          description: ORG name ar per eIDAS certificate
          type: string
        client_uri:
          description: URI string of a web page providing information about the client
          type: string
          format: uri
        logo_uri:
          description: Client ID assigned by Open Banking Directory
          type: string
          format: uri
        contacts:
          description: Contacts to departments responsible for the client
          type: array
          items:
            type: string
            format: uri
          minItems: 1
        tos_uri:
          description: URI string that points to a human-readable terms of service document for the client
          type: string
          format: uri
        policy_uri:
          description: URI string that points to a human-readable privacy policy document
          type: string
          format: uri
        jwks_uri:
          description: URI string referencing the client's JSON Web Key (JWK) Set
          type: string
          format: uri
        jwks:
          description: Client's JSON Web Key Set [RFC7517] document value
          type: object
        software_id:
          description: UUID4 string
          type: string
        software_version:
          description: Client-supplied software version string
          type: string
    Enrol400BadRequestResponseSchema:
      type: object
      properties:
        error:
          description:  Error type
          type: string
          enum:
            - invalid_redirect_uri
            - invalid_client_metadata
            - invalid_software_statement
            - unapproved_software_statement
        error_description:
          description: A more detailed error description
          type: string
    OrganisationTypeSchema:
      type: string
      enum:
        - aspsp
        - tpp
    OrganisationIdSchema:
      type: string
    OrganisationsGetFromSCIM200OKResponseSchema:
      type: array
      items:
        type: object
    OrganisationGetFromSCIM200OKResponseSchema:
      type: object
    SoftwareStatement201CreatedSchema:
      type: object
      properties:
        ClientName:
          type: string
          description: Software Statement client name
        Description:
          type: string
          description: Software Statement description
        OnBehalfOfObOrganisation:
          type: string
          description: Organisation Id
        PolicyUri:
          type: string
          format: uri
          description: The Software Statement policy URI
        ClientUri:
          type: string
          format: uri
          description: The Software Statement client URI
        LogoUri:
          type: string
          format: uri
          description: The Software Statement logo URI
        RedirectUri:
          type: array
          items:
            type: string
            format: uri
          description: The Software Statement redirect URI
        Roles:
          type: array
          items:
            type: string
            format: uri
          description: The list of Software Statement roles
        TermsOfServiceUri:
          type: string
          format: uri
          description: The Software Statement terms of service URI
        Version:
          type: string
          description: Software Statement version as provided by the organisation's PTC
    SoftwareStatementGetSchema:
      type: object
      properties:
        Active:
          type: boolean
          description: Software Statement active/inactive flag
        ClientId:
          type: string
          description: Software Statement client Id
        ClientName:
          type: string
          description: Software Statement client name
        Description:
          type: string
          description: Software Statement description
        Id:
          $ref: '#/components/schemas/SoftwareStatementIdSchema'
        Mode:
          type: string
          description: Software Statement mode
        ObClientCreated:
          type: boolean
          description: Client created flag
        OnBehalfOfObOrganisation:
          type: string
          description: Organisation Id
        PolicyUri:
          type: string
          format: uri
          description: The Software Statement policy URI
        ClientUri:
          type: string
          format: uri
          description: The Software Statement client URI
        LogoUri:
          type: string
          format: uri
          description: The Software Statement logo URI
        RedirectUri:
          type: array
          items:
            type: string
            format: uri
          description: The Software Statement redirect URI
        Roles:
          type: array
          items:
            type: string
          description: The list of Software Statement roles
        SigningKeyIds:
          type: array
          items:
            type: string
          description: The list of signing certificate Ids
        TermsOfServiceUri:
          type: string
          format: uri
          description: The Software Statement terms of service URI
        TransportKeyIds:
          type: array
          items:
            type: string
          description: The list of transport certificate Ids
        Version:
          type: string
          description: Software Statement version as provided by the organisation's PTC
    SoftwareStatementsGetSchema:
      type: array
      items:
        $ref: '#/components/schemas/SoftwareStatementGetSchema'
      description: The list of Software Statements
    SoftwareStatementIdSchema:
      type: string
      description: Software Statement Id
    UniqueRequestIdSchema:
      type: string
      description: Unique Request Id