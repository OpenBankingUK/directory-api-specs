openapi: 3.0.2
info:
  version: 0.0.1
  title: Directory Notifications API
  description: |
  
    A WebSocket API design for the Open Banking Directory.
    
    ## Approach
    
    The design:
    
    * Uses a GET on the root URI to indicate the only available resource (as this is meaningful across a WebSocket connection).
    
    * Offers a `default` response rather than one allied to a HTTP response code (as a HTTP response is meaningless for a WebSocket). The only exceptions are `401`/`403` for connection failures during handshake due to invalid credentials (unknown/insufficient permissions) when a downgrade to HTTPS can be expected.
    
    * Does not model errors, etc. usually found in REST APIs.
    
    * Uses OpenAPI specification rather than Swagger in order to take advantage of the `oneOf` keyword.
    
    Note: Originally considered using [AsyncAPI](https://github.com/asyncapi/asyncapi) but this currently lacks OAuth 2.0 support.
    
    ## Transport
    
    The current API is available over HTTPS and WSS and thus is included in the specification. Clients connecting over HTTPS will be upgraded to WSS once connected.
    
    ## Events
    
    The API emits events relating to changes in the state of entities the Directory manages:
    
    * The event types are encoded in the property i.e. `OBDirectoryEventCreated1`, `OBDirectoryEventAdded1`, `OBDirectoryEventUpdated1` and `OBDirectoryEventRevoked1`
    
    * The entities are described by the `SubjectType` enumeration.
    
    * The `sub` of the `subject` property points to the entity described by the Directory that can referenced by an external consumer. This is expected to be in the form of a URI.
    
    ## Formatting
    
    The events emitted by this API are [Security Event Tokens](https://tools.ietf.org/html/rfc8417):
    
    * Security Event Tokens build on the format of [JSON Web Tokens](https://tools.ietf.org/html/rfc7519) (JWT).
    
    * This specification only describes the structure of the event itself.
    
    * The semantics of a JWT are not described as JWTs are not supported natively by OpenAPI specification. The event is specified  with the MIME type `application/jwt` and is described as a `string` with `format` referencing the JSON Schema object that describes the payload (`OBEventNotification1`).
        
servers: 
  - url: https://obdfinotifications.openbanking.org.uk
    description: Production notifications instance - HTTP
  - url: wss://obdfinotifications.openbanking.org.uk
    description: Production notifications instance - Secure WebSocket
paths:
  /:
    get:
      summary: Listen to events over WebSocket interface
      tags:
        - Events
      parameters:
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          schema:
            type: string
          required: true
      responses:
        401:
          description: Invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/responses/401ErrorResponse'
        403:
          description: Access token presented with incorrect permissions
          content:
            application/json:
              schema:
                $ref: '#/components/responses/403ErrorResponse'
        default:
          description: Events from WebSockets endpoint
          content:
            application/jwt:
              schema:
                type: string
                format: OBEventNotification1
      security:
        - TPPOAuth2Security:
            - notifications:read
components:
  responses:
    401ErrorResponse:
      description: Unauthorized
    403ErrorResponse:
      description: Forbidden
  schemas:
    OBEventNotification1:
      description: Security Event Token payload
      type: object
      properties:
        iss:
          description: Issuer.
          type: string
        iat:
          description: 'Issued At. '
          type: string
          minLength: 1
          maxLength: 10
          pattern: '[0-9]{1,10}'
        jti:
          description: JWT ID.
          type: string
          minLength: 1
          maxLength: 128
        aud:
          description: Audience.
          type: string
          minLength: 1
          maxLength: 128
        txn:
          description: Transaction Identifier.
          type: string
          minLength: 1
          maxLength: 128
        toe:
          description: Time of Event.
          type: string
          minLength: 1
          maxLength: 10
          pattern: '[0-9]{1,10}'
        events:
          $ref: '#/components/schemas/OBEventDirectoryEvent1'
      required:
        - iss
        - iat
        - jti
        - aud
        - txn
        - toe
        - events
      additionalProperties: false
    OBEventDirectoryEvent1:
      oneOf:
        - $ref: '#/components/schemas/OBDirectoryEventCreated1'
        - $ref: '#/components/schemas/OBDirectoryEventAdded1'
        - $ref: '#/components/schemas/OBDirectoryEventUpdated1'
        - $ref: '#/components/schemas/OBDirectoryEventRevoked1'
    OBDirectoryEventCreated1:
      type: object
      properties:
        'http://openbanking.org.uk/entity-created':
          $ref: '#/components/schemas/OBDirectoryEventSubject1'
    OBDirectoryEventAdded1:
      type: object
      properties:
        'http://openbanking.org.uk/entity-added':
          $ref: '#/components/schemas/OBDirectoryEventSubject1'
    OBDirectoryEventUpdated1:
      type: object
      properties:
        'http://openbanking.org.uk/entity-updated':
          $ref: '#/components/schemas/OBDirectoryEventSubject1'
    OBDirectoryEventRevoked1:
      type: object
      properties:
        'http://openbanking.org.uk/entity-revoked':
          $ref: '#/components/schemas/OBDirectoryEventSubject1'
    OBDirectoryEventSubject1:
      type: object
      required:
        - subject
      properties:
        subject:
          type: object
          required:
            - subject_type
          properties:
            subject_type:
              $ref: '#/components/schemas/SubjectType'
            sub:
              type: string
              description: The subject of the event
              format: uri
    SubjectType:
      type: string
      enum:
        - Organisation
        - Role
        - Passport
        - Transport Certificate
        - Signing Certificate
        - Encryption Key
        - Authorization Server
  securitySchemes:
    TPPOAuth2Security:
      type: oauth2
      description: Flows to support OAuth 2.0
      flows: 
        clientCredentials:
          tokenUrl: 'https://authserver.example/token'
          scopes:
            notifications:read: Ability to read notifications
