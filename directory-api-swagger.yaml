openapi: 3.0.0
info:
  title: Open Banking Directory API
  version: 0.0.1
  description: OB Tech Directory API
paths:
  '/organisation/{OrganisationType}':
    post:
      summary: Enrol a eIDAS QWAC-bearing participant
      description: Enrol an eIDAS QWAC certificate-bearing participant onto the Open Banking Directory. Currenty only TPPs can use this enrolment endpoint, so please set `OrganisationType` to `tpp`
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
      requestBody:
        $ref: '#/components/requestBodies/Enrol'
      responses:
        '201':
          $ref: '#/components/responses/Enrol201CreatedResponse'
        '400':
          $ref: '#/components/responses/Enrol400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get all organisations that the client is authorised to retrieve
      description: Note that this was not in the original design but is included to inform the client
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/OrganisationsGetFromSCIM200OKResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
  '/organisation/{OrganisationType}/{OrganisationId}':
    get:
      summary: Get the given organisation's details
      tags:
        - Organisations
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/OrganisationGetFromSCIM200OKResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/contact/{ContactType}':
    put:
      summary: Update the business or the technical contacts for the given organisation
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactType'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get the business or the technical contacts for the given organisation
      x-PingAccessResourceName: OrganisationContactGET
      x-PingAccessRuleType: uk.org.openbanking.policy.RequestHostOverride
      x-PingAccessRuleTarget: obdorgcontacts.{environment}
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactType'
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/Contact200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/organisation/{OrganisationType}/{OrganisationId}/software-statement':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
    post:
      summary: Create a software statement
      tags:
        - Software Statements
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatement'
      responses:
        '201':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get all software statements for the given organisation
      tags:
        - Software Statements
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementsGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get a software statement
      tags:
        - Software Statements
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      summary: Update a software statement
      tags:
        - Software Statements
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementState'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementUpdated200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/redirect-uri':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    post:
      summary: Add a redirect URI to the given Software Statement
      tags:
        - Software Statement Redirect URIs
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementRedirectURI'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementUpdated200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '409':
          $ref: '#/components/responses/409ConflictResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/software-statement-assertion':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary:
        Get a Software Statement Assertion for the given SoftwareStatementID.
      description: |
        The response body is a signed JWT and the values found in the header and the payload of the SSA are specified below

        # Terminology

          This specification uses the terms "access token", "authorization code", "authorization endpoint", "authorization grant", "authorization server", "client", "client identifier", "client secret", "grant type", "protected resource", "redirection URI", "refresh token", "resource owner", "resource server", "response type", and "token endpoint" defined by OAuth 2.0 [RFC6749] and uses the term "Claim" defined by JSON Web Token (JWT) [RFC7519].

          * __Account Servicing Payment Services Provider (ASPSP)__ -- An organisation managing customer accounts (and operating banking APIs).
          * __Primary Technical Contact__ -- The person at the TPP who creates an SSA and invokes a registration mechanism. This is an example of an [RFC7591] Client Developer.
          * __OB Organisation ID__ -- The unique identifier for each OpenBanking participant. Both TPPs and ASPSPs have OB Organisation IDs.
          * __OpenBanking Directory__ -- An implementation of a [PSD2] competent authority; acts as an Identity Provider, certificate authority, and registry governing the participants in the UK OpenBanking API scheme.
          * __ASPSP Registration Endpoint__ -- OAuth 2.0 & [RFC7591] compliant endpoint, exact value is discoverable from the [OIDCD] openid-configuration file of the ASPSP.
          * __Software Statement Assertion (SSA)__ -- An implementation of an [RFC7591] software statement, signed by the OpenBanking Directory.
          * __Trusted Third Party (TPP)__ -- An organization working to initiate payments or consume account information with/from an ASPSP.
          * __TPP Client Software__ -- software implementing an OAuth2 client, interacting with an ASPSP registration endpoint.

        # Software Statement Assertion (SSA)

          The SSA is a JSON Web Token (JWT) containing client metadata about an instance of TPP client software. The JWT is issued and signed by the OpenBanking Directory.

        ## SSA Payload

          The payload of an OpenBanking SSA MUST be a compliant software statement according to [RFC7591]. The SSA MUST also be a compliant JWT according to [RFC7519]. The following metadata profiles the metadata in [RFC7591] and [RFC7519]:

          | Metadata | Description | Source Specification |
          |----------|-------------|----------------------|
          |`software_id`|Unique Identifier for TPP Client Software|[RFC7591]|
          |`iss`|SSA Issuer|[RFC7519]|
          |`iat`|Time SSA issued|[RFC7519]|
          |`jti`|JWT ID|[RFC7519]|

          The following software metadata is additionally defined for this profile:

          |Metadata |Description |Field Size |Default values |
          |---------|------------|-----------|---------------|
          |`software_client_id`|The Client ID Registered at OB used to access OB resources|Base62 GUID (22 chars)| |
          |`software_client_description`|Human-readable detailed description of the client|Max256Text| |
          |`software_client_name`|Human-readable Software Name|Max40Text| |
          |`software_client_uri`|The website or resource root uri|Max256Text| |
          |`software_version`|The version number of the software should a TPP choose to register and / or maintain it|decimal| |
          |`software_environment`|Requested additional field to avoid certificate check|Max256Text| |
          |`software_jwks_endpoint`|Contains all active signing and network certs for the software|Max256Text| |
          |`software_jwks_revoked_endpoint`|Contains all revoked signing and network certs for the software|Max256Text| |
          |`software_logo_uri`|Link to the TPP logo. Note, ASPSPs are not obliged to display images hosted by third parties|Max256Text| |
          |`software_mode`|ASPSP Requested additional field to indicate that this software is `Test` or `Live` the default is `Live`. Impact and support for `Test` software is up to the ASPSP.|Max40Text| |
          |`software_on_behalf_of_org`|A reference to fourth party organsiation resource on the OB Directory if the registering TPP is acting on behalf of another.|Max40Text| |
          |`software_policy_uri`|A link to the software's policy page|Max256Text| |
          |`software_redirect_uris`|Registered client callback endpoints as registered with Open Banking|A string array of Max256Text items|
          |`software_roles`|A multi value list of PSD2 roles that this software is authorized to perform.|A string array of Max256Text items| |
          |`software_tos_uri`|A link to the software's terms of service page|Max256Text| |

          The following Organisational metadata is defined for this profile:

          |Metadata |Description |Field Size | Default values |
          |---------|------------|-----------|----------------|
          |`organisation_competent_authority_claims`|Authorisations granted to the organsiation by an NCA|CodeList {`AISP`, `PISP`, `CBPII`, `ASPSP`}| |
          |`org_status`|Included to cater for voluntary withdrawal from OB scenarios|`Active`, `Revoked`, or `Withdrawn`| |
          |`org_id`|The Unique TPP or ASPSP ID held by OpenBanking.|Max35Text| |
          |`org_name`|Legal Entity Identifier or other known organisation name|Max140Text| |
          |`org_contacts`|JSON array of objects containing a triplet of name, email, and phone number|Each item Max256Text| |
          |`org_jwks_endpoint`|Contains all active signing and network certs for the organisation|Max256Text| |
          |`org_jwks_revoked_endpoint`|Contains all revoked signing and network certs for the organisation|Max256Text| |

        ## SSA header

          The SSA header MUST comply with [RFC7519].

          |Metadata |Description |Comments |
          |---------|------------|---------|
          |`typ`|MUST be set to `JWT`| |
          |`alg`|MUST be set to `ES256` or `PS256`| |
          |`kid`|The kid will be kept the same as the `x5t` parameter. (X.509 Certificate SHA-1 Thumbprint) of the signing certificate.| |

          ### Example SSA

          The elements defined in the software statement will consist of the following values.

          *Note that there are inconsistent applications of booleans or "Active" strings in the current data model.*

          *Note that there are inconsistent applications of status flags case sensitivity.*

          *The attributes required to be displayed by ASPSPs.*

        ```
        {
          "typ": "JWT",
          "alg": "ES256",
          "kid": "ABCD1234"
        }
        {
          "iss": "OpenBanking Ltd",
          "iat": 1492756331,
          "jti": "id12345685439487678",
          "software_environment": "production",
          "software_mode": "live",
          "software_id": "65d1f27c-4aea-4549-9c21-60e495a7a86f",
          "software_client_id": "OpenBanking TPP Client Unique ID",
          "software_client_name": "Amazon Prime Movies",
          "software_client_description": "Amazon Prime Movies is a moving streaming service",
          "software_version": "2.2",
          "software_client_uri": "https://prime.amazon.com",
          "software_redirect_uris": [
            "https://prime.amazon.com/cb",
            "https://prime.amazon.co.uk/cb"
          ],
          "software_roles": [
            "PISP",
            "AISP"
          ],
          "organisation_competent_authority_claims": {
            "authority_id": "FMA", // Austrian Financial Market Authority
            "registration_id": "111111",
            "status": "Active",
            "authorisations":  [
              {
                "member_state": "GB",
                "roles": [
                  "PISP",
                  "AISP"
                ]
              },
              {
                "member_state": "IR",
                "roles": [
                  "PISP"
                ]
              }
            ]
          },
          "software_logo_uri": "https://prime.amazon.com/logo.png",
          "org_status": "Active",
          "org_id": "Amazon TPPID",
          "org_name": "OpenBanking TPP Registered Name",
          "org_contacts": [
            {
              "name": "contact name",
              "email": "contact@contact.com",
              "phone": "+447890130558"
              "type": "business"
            },
            {
              "name": "contact name",
              "email": "contact@contact.com",
              "phone": "+447890130558",
              "type": "technical"
            }
          ],
          "org_jwks_endpoint": "https://jwks.openbanking.org.uk/org_id/org_id.jkws",
          "org_jwks_revoked_endpoint": "https://jwks.openbanking.org.uk/org_id/revoked/org_id.jkws",
          "software_jwks_endpoint": "https://jwks.openbanking.org.uk/org_id/software_id.jkws",
          "software_jwks_revoked_endpoint": "https://jwks.openbanking.org.uk/org_id/revoked/software_id.jkws",
          "software_policy_uri": "https://tpp.com/policy.html",
          "software_tos_uri": "https://tpp.com/tos.html",
          "software_on_behalf_of_org": "Acme Ltd"
        }
        {
          Signature
        }
        ```

        # Automated Client Registration

        A TPP MAY use automated client registration to submit an SSA to an ASPSP in exchange for client credentials for use as a client against an OAuth 2.0 Authorization Server. It is RECOMMENDED for ASPSPs to support the automated client registration mechanism. A large number of claims that OpenID Connect OPs could support as part of the RFC7591 request are detailed [https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata) and should be followed if not explicitly referenced in the Software Statement Assertion claim set.

        ## Request Validation

        Prior to issuing a client registration response, the ASPSP MUST perform the following checks

        * The ASPSP SHOULD check whether the TPP that initiated the TLS connection is the same TPP as listed in the SSA.
        * In the case where a gateway or other piece of infrastructure pre-terminates the MATLS channel in front of the registration endpoint, the certificate used to initiate the connection or some part of that certificate (such as DN & Issuer) SHOULD be made available to the ASPSP for validation against the claims in the SSA.
        * The registration request MUST be signed with a key contained in the JWKS referenced in the SSA included with the request. This ensures that a holder-of-key proof-of-possession is performed proving that the TPP app was the originally intended recipient of the SSA when the OB issued it.
        * The SSA MUST be validated according to [RFC7519], including validation of the signature and validity window.

        JWT signature must be validated, this involves retrieving the jwks keyset for both the OB and the TPP. The OB keystore location will be published as part of the directory specification, The TPP's will be included in the software statement.

        ### SSA Lifetime

        The SSA's Lifetime / Validity period is not defined by Open Banking. ASPSPs in the Open Banking ecosystem are required to implement pragmatic time ranges in which to accept an SSA. For example, an ASPSP that has implemented Dynamic Client Registration may choose to accept SSA's that were issued no earlier than 1 minute prior to their presentation however ASPSPs that only support manual registration may need to accept SSAs that were issued 30 minutes prior as the elapsed time period between generation and use between these two flows is expected to differ significantly.

      tags:
        - Software Statement Assertions
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementAssertion200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/organisation/{OrganisationType}/{OrganisationId}/certificate':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get the certificates for the given organisation
      tags:
        - Organisation Certificates
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/certificate/{OrganisationCertificateType}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/OrganisationCertificateType'
    post:
      summary: Store or create a new certificate of the given OrganisationCertificateType for the given organisation
      tags:
        - Organisation Certificates
      parameters:
        - $ref: '#/components/parameters/OrganisationType'
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/OrganisationCertificateType'
      requestBody:
        $ref: '#/components/requestBodies/CertificateOrCSR'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '201':
          $ref: '#/components/responses/CertificateOrKey201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get the certificates of the given OrganisationCertificateType for the given oranisation
      tags:
        - Organisation Certificates
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/organisation/{OrganisationType}/{OrganisationId}/certificate/kid/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/CertificateOrKeyId'
    get:
      summary: Retrieve a certificate with the given CertificateOrKeyId
      tags:
        - Organisation Certificates
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/CertificateOrKeyGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    delete:
      summary: Revoke or remove a certificate with the given CertificateOrKeyId
      tags:
        - Organisation Certificates
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '204':
          $ref: '#/components/responses/204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/certificate':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get certificates for the given software statement
      tags:
        - Software Statement Certificates
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/certificate/{SoftwareStatementCertificateOrKeyType}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'
    post:
      summary: Add a key or create a new certificate for the given software statement
      tags:
        - Software Statement Certificates
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
      requestBody:
        $ref: '#/components/requestBodies/CSROrKey'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '201':
          $ref: '#/components/responses/CertificateOrKey201CreatedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get the certificates of the given type for the given software statement
      tags:
        - Software Statement Certificates
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeysGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/organisation/{OrganisationType}/{OrganisationId}/software-statement/{SoftwareStatementId}/certificate/{OrganisationAssociativeCertificateType}/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/OrganisationAssociativeCertificateType'
      - $ref: '#/components/parameters/CertificateOrKeyId'
    put:
      summary: Associate/de-associate a QSEAL/OBSEAL certificate with the given software statement
      tags:
        - Certificate Associations
      requestBody:
        $ref: '#/components/requestBodies/CertificateOrKeyAssociation'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '200':
          $ref: '#/components/responses/CertificateAssociatedWithASoftwareStatement200AcceptedResponse'
        '204':
          $ref: '#/components/responses/204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '409':
          $ref: '#/components/responses/409ConflictResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    get:
      summary: Get the certificate of the given type and ID for the given software statement
      tags:
        - Software Statement Certificates
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/CertificateOrKeyGet200OKResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'

  '/organisation/{OrganisationType}/{OrganisationId}/authorisation-server':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get all Authorisation Servers for the given organisation
      tags:
        - Authorisation Servers
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServersResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    post:
      summary: Create an Authorisation Server for the given organisation
      tags:
        - Authorisation Servers
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationServer'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationServerResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
  '/organisation/{OrganisationType}/{OrganisationId}/authorisation-server/{AuthorisationServerId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationType'
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
    get:
      summary: Get .well-known entity
      tags:
        - Authorisation Servers
      security:
        - OAuth2SecurityReadOps:
          - ASPSPReadAccess
          - TPPReadAccess
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServerResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    put:
      summary: Update .well-known entity
      tags:
        - Authorisation Servers
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationServer'
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '202':
          $ref: '#/components/responses/AuthorisationServer202AcceptedResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
    delete:
      summary: Delete an Authorisation Server
      tags:
        - Authorisation Servers
      security:
        - OAuth2SecurityReadWriteOps:
          - ASPSPReadAccess
          - TPPReadAccess
          - TPPModify
      responses:
        '204':
          $ref: '#/components/responses/204NoContentResponse'
        '400':
          $ref: '#/components/responses/400BadRequestResponse'
        '401':
          $ref: '#/components/responses/401UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/404NotFoundResponse'
        '406':
          $ref: '#/components/responses/406NotAcceptableResponse'
        '500':
          $ref: '#/components/responses/500InternalServerErrorResponse'
        '502':
          $ref: '#/components/responses/502BadGatewayResponse'
components:
  parameters:
    AuthorisationServerId:
      name: AuthorisationServerId
      description: The authorisation server Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationServerIdSchema'
    CertificateOrKeyId:
      name: CertificateOrKeyId
      description: The certificate or key Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CertificateOrKeyIdSchema'
    ContactType:
      name: ContactType
      description: The contact type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ContactTypeSchema'
    OrganisationType:
      name: OrganisationType
      description: OB Organisation Type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationTypeSchema'
    OrganisationCertificateType:
      name: OrganisationCertificateType
      description: The certificate type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationCertificateTypeSchema'
    OrganisationAssociativeCertificateType:
      name: OrganisationAssociativeCertificateType
      description: The certificate type that can be associated with a software statement
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAssociativeCertificateTypeSchema'
    OrganisationId:
      name: OrganisationId
      description: The organsation ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationIdSchema'
    SoftwareStatementCertificateOrKeyType:
      name: SoftwareStatementCertificateOrKeyType
      description: The certificate or key type that can be associated with a software statement
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementCertificateOrKeyTypeSchema'
    SoftwareStatementId:
      name: SoftwareStatementId
      description: The software statement ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementIdSchema'
  requestBodies:
    AuthorisationServer:
      description: Properties to create/update authorisation server
      required: true
      content:
        application/vnd.openbanking.directory.authorisationserver-v2+json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerRequestSchema'
    Contact:
      description: Properties to update business/technical contacts
      required: true
      content:
        application/vnd.openbanking.directory.orgcontacts-v2+json:
          schema:
            $ref: '#/components/schemas/ContactSchema'
    CertificateOrCSR:
      description: PEM file -- the contents of the PEM file will differ depending upon *OrganisationCertificateType*. If *OrganisationCertificateType* is set to *qwac*, *qseal* then the PEM file should contain a *QWAC* or a *QSEAL* certificate respectively; if *OrganisationCertificateType* is set to *obwac* or *obseal* then the PEM file should contain a Certificate Signing Request (CSR) for an OB-issued *OBWAC* or *OBSEAL* certificate respectively.
      required: true
      content:
        application/x-pem-file:
          schema:
            $ref: '#/components/schemas/CertificateOrKeySchema'
    CSROrKey:
      description: PEM file -- the contents of the PEM file will differ depending upon *SoftwareStatementCertificateOrKeyType*. If *SoftwareStatementCertificateOrKeyType* is set to *obsigning* or *obtransport* then the PEM file should contain a Certificate Signing Request (CSR) for an OB signing or OB transport certificate respectively; if *SoftwareStatementCertificateOrKeyType* is set to *sigkey*, *enckey* then the PEM file should contain a public signing or encryption key respectively.
      required: true
      content:
        application/x-pem-file:
          schema:
            $ref: '#/components/schemas/CertificateOrKeySchema'
    CertificateOrKeyAssociation:
      description: Certificate or Key Association Payload
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyAssociationSchema'
    Enrol:
      description: Properties to enrol an eIDAS QWAC-bearing TPP onto the Open Banking Directory (required fields to be validated)
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnrolSchema'
    SoftwareStatement:
      description: Software Statement payload
      required: true
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementCreateSchema'
    SoftwareStatementRedirectURI:
      description: Software Statement Redirect URI
      required: true
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/SoftwareStatementRedirectURISchema'
    SoftwareStatementState:
      description: Payload used to deactivate/reactivate a Software Statement
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementStateSchema'
  responses:
    201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    204NoContentResponse:
      description: No Content
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    400BadRequestResponse:
      description: Bad Request
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    401UnauthorizedResponse:
      description: Unauthorized
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    403ForbiddenResponse:
      description: Forbidden
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    404NotFoundResponse:
      description: Not found
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    406NotAcceptableResponse:
      description: Not Acceptable
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    409ConflictResponse:
      description: Conflict
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    502BadGatewayResponse:
      description: Bad Gateway
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    500InternalServerErrorResponse:
      description: Internal Server Error
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    AuthorisationServerResponse:
      description: OK
      content:
        application/vnd.openbanking.directory.authorisationserver-v2+json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    AuthorisationServer202AcceptedResponse:
      description: Accepted
      content:
        application/vnd.openbanking.directory.authorisationserver-v2+json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    AuthorisationServersResponse:
      description: OK
      content:
        application/vnd.openbanking.directory.authorisationserver-list-v2+json:
          schema:
            $ref: '#/components/schemas/AuthorisationServersSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificatesOrKeysGet200OKResponse:
      description: OK
      content:
        application/jwk-set+json:
          schema:
            $ref: '#/components/schemas/CertificatesOrKeysGetSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificateOrKeyGet200OKResponse:
      description: OK
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
    CertificateOrKey201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    CertificateOrKey202AcceptedResponse:
      description: Accepted
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    CertificateAssociatedWithASoftwareStatement200AcceptedResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    Contact200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.orgcontacts-v2+json:
          schema:
            $ref: '#/components/schemas/ContactSchema'
    Enrol201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enrol201CreatedResponseSchema'
    Enrol400BadRequestResponse:
      description: Bad Request
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enrol400BadRequestResponseSchema'
    OrganisationsGetFromSCIM200OKResponse:
      description: |
        List of the organisation - Schema in scim-swagger.json
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/OrganisationsGetFromSCIM200OKResponseSchema'
    OrganisationGetFromSCIM200OKResponse:
      description: |
        Full details of the organisation - Schema in scim-swagger.json
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/OrganisationGetFromSCIM200OKResponseSchema'
    SoftwareStatementsGet200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-list-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementsSchema'
    SoftwareStatementAssertion200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/jws+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementAssertionSchema'
    SoftwareStatement201CreatedResponse:
      description: Created
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
    SoftwareStatementUpdated200OKResponse:
      description: OK
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
    SoftwareStatementGet200OKResponse:
      description: Get the software statements with the given id
      headers:
        OB-Request-Id:
          schema:
            $ref: '#/components/schemas/UniqueRequestIdSchema'
      content:
        application/vnd.openbanking.directory.softwarestatement-v2+json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementSchema'
  schemas:
    AuthorisationServerRequestSchema:
      type: object
      properties:
        AutoRegistrationSupported:
          type: boolean
        BaseApiDNSUri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        CustomerFriendlyDescription:
          description: An RFC-3986-compliant URI
          type: string
          maxLength: 256
        CustomerFriendlyLogoUri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        CustomerFriendlyName:
          type: string
          maxLength: 256
        DeveloperPortalUri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        TermsOfService:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        OpenIDConfigEndPointUri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        PayloadSigningCertLocation:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        EISCDId:
          type: array
          items:
            type: string
            maxLength: 256
        ParentAuthorisationServerId:
          type: string
          maxLength: 22
    AuthorisationServerSchema:
      type: object
      properties:
        Id:
          type: string
          maxLength: 22
        AutoRegistrationSupported:
          type: boolean
        BaseApiDNSUri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        CustomerFriendlyDescription:
          type: string
          maxLength: 256
        CustomerFriendlyLogoUri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        CustomerFriendlyName:
          type: string
          maxLength: 256
        DeveloperPortalUri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        TermsOfService:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        OpenIDConfigEndPointUri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        PayloadSigningCertLocation:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
          maxLength: 256
        EISCDId:
          type: array
          items:
            type: string
            maxLength: 256
        ParentAuthorisationServerId:
          type: string
          maxLength: 22
    AuthorisationServersSchema:
      type: array
      items:
        $ref: '#/components/schemas/AuthorisationServerSchema'
    AuthorisationServerIdSchema:
      type: string
      maxLength: 22
    CertificateOrKeySchema:
      type: string
    CertificateOrKeyIdSchema:
      type: string
      maxLength: 256
    CertificateOrKeyAssociationSchema:
      type: object
      properties:
        associate:
          type: boolean
    CertificatesOrKeysGetSchema:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/CertificateOrKeyGetSchema'
    CertificateOrKeyGetSchema:
      type: object
      properties:
        obOrganisationId:
          description: OB organisation Id
          type: string
        softwareStatementId:
          description: Software Statement Id
          type: string
        status:
          type: string
        expiryDateTime:
          type: string
          format: date-time
        e:
          type: string
        keyType:
          type: string
        kid:
          type: string
        kty:
          type: string
        n:
          type: string
        use:
          type: string
        x5c:
          type: array
          items:
            description: A PKIX certificate [RFC5280]
            type: string
        x5t:
          type: string
        x5t#S256:
          type: string
        x5u:
          type: string
    ContactSchema:
      type: object
      properties:
        EmailAddress:
          type: string
          maxLength: 18
        PhoneNumber:
          type: string
          maxLength: 18
    ContactTypeSchema:
      type: string
      enum:
        - business
        - technical
    EnrolSchema:
      type: object
      properties:
        redirect_uris:
          type: array
          items:
            description: An RFC-3986-compliant URI
            type: string
            format: uri
        token_endpoint_auth_method:
          type: string
        grant_types:
          type: array
          items:
            type: string
        response_types:
          type: array
          items:
            type: string
        client_name:
          type: string
        client_uri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
        logo_uri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
        scope:
          type: string
        contacts:
          type: array
          items:
            type: string
            format: email
        tos_uri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
        policy_uri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
        jwks_uri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
        jwks:
          type: object
        software_id:
          type: string
        software_version:
          type: string
      required:
        - redirect_uris
        - token_endpoint_auth_method
        - grant_types
        - response_types
        - client_name
        - client_uri
        - logo_uri
        - scope
        - contacts
        - tos_uri
        - policy_uri
        - jwks_uri
        - jwks
        - software_id
        - software_version
    Enrol201CreatedResponseSchema:
      description: >-
        A JSON object DCR response returned when client gets created.
      type: object
      properties:
        client_id:
          description: Client ID assigned by Open Banking Directory
          type: string
          minLength: 18
          maxLength: 18
        client_secret:
          description: Client secret generated by Open Banking Directory
          type: string
        client_id_issued_at:
          description: Timestamp
          type: integer
        client_secret_expires_at:
          description: Timestamp
          type: integer
        ob_org_id:
          description: Organisation ID assigned by Open Banking   Directory
          type: string
          minLength: 18
          maxLength: 18
        redirect_uris:
          description: Array of Redirection URI values used by the Client, as supplied by the client
          type: array
          items:
            description: An RFC-3986-compliant URI
            type: string
            format: uri
          minItems: 1
        token_endpoint_auth_method:
          description: client_secret_post
          type: string
        grant_types:
          description: client_credentials
          type: string
        response_types:
          description: client_credentials
          type: string
        scope:
          description: ASPSPFullAccess
          type: string
        client_name:
          description: ORG name ar per eIDAS certificate
          type: string
        client_uri:
          description: An RFC-3986-compliant URI string of a web page providing information about the client
          type: string
          format: uri
        logo_uri:
          description: An RFC-3986-compliant URI
          type: string
          format: uri
        contacts:
          description: Contacts to departments responsible for the client
          type: array
          items:
            description: An RFC-3986-compliant URI
            type: string
            format: uri
          minItems: 1
        tos_uri:
          description: An RFC-3986-compliant URI string that points to a human-readable terms of service document for the client
          type: string
          format: uri
        policy_uri:
          description: An RFC-3986-compliant URI string that points to a human-readable privacy policy document
          type: string
          format: uri
        jwks_uri:
          description: An RFC-3986-compliant URI string referencing the client's JSON Web Key (JWK) Set
          type: string
          format: uri
        jwks:
          description: Client's JSON Web Key Set [RFC7517] document value
          type: object
        software_id:
          description: UUID4 string
          type: string
        software_version:
          description: Client-supplied software version string
          type: string
    Enrol400BadRequestResponseSchema:
      type: object
      properties:
        error:
          description:  Error type
          type: string
          enum:
            - invalid_redirect_uri
            - invalid_client_metadata
            - invalid_software_statement
            - unapproved_software_statement
        error_description:
          description: A more detailed error description
          type: string
    OrganisationCertificateTypeSchema:
      type: string
      enum:
        - qwac
        - qseal
        - obwac
        - obseal
    OrganisationAssociativeCertificateTypeSchema:
      type: string
      enum:
        - qseal
        - obseal
    OrganisationTypeSchema:
      type: string
      enum:
        - aspsp
        - tpp
    OrganisationIdSchema:
      type: string
    OrganisationsGetFromSCIM200OKResponseSchema:
      type: array
      items:
        type: object
    OrganisationGetFromSCIM200OKResponseSchema:
      type: object
    SoftwareStatementCertificateOrKeyTypeSchema:
      type: string
      enum:
        - obtransport
        - obsigning
        - sigkey
        - enckey
    SoftwareStatementCreateSchema:
      type: object
      properties:
        ClientName:
          type: string
          description: Software Statement client name
          maxLength: 40
        Description:
          type: string
          description: Software Statement description
          maxLength: 256
        OnBehalfOfObOrganisation:
          type: string
          description: A reference to fourth party organisation resource on the OB Directory if the registering TPP is acting on behalf of another
          maxLength: 40
        PolicyUri:
          type: string
          format: uri
          description: The Software Statement RFC-3986-compliant policy URI
          maxLength: 256
        ClientUri:
          type: string
          format: uri
          description: The Software Statement RFC-3986-compliant client URI
          maxLength: 256
        LogoUri:
          type: string
          format: uri
          description: The Software Statement RFC-3986-compliant logo URI
          maxLength: 256
        RedirectUri:
          type: array
          items:
            description: An RFC-3986-compliant URI
            type: string
            format: uri
            maxLength: 256
          description: The Software Statement redirect URIs
        Roles:
          type: array
          items:
            type: string
            maxLength: 256
          description: The list of Software Statement roles
        TermsOfServiceUri:
          type: string
          format: uri
          description: The Software Statement terms of service RFC-3986-compliant URI
          maxLength: 256
        Version:
          type: number
          description: Software Statement version as provided by the organisation's PTC
    SoftwareStatementSchema:
      type: object
      properties:
        Active:
          type: boolean
          description: Software Statement active/inactive flag
        ClientId:
          type: string
          description: Software Statement client Id
          maxLength: 22
        ClientName:
          type: string
          description: Software Statement client name
          maxLength: 40
        Description:
          type: string
          description: Software Statement description
          maxLength: 256
        Id:
          $ref: '#/components/schemas/SoftwareStatementIdSchema'
        Mode:
          type: string
          enum:
            - Live
            - Not Live
          description: Software Statement mode
          maxLength: 8
        ObClientCreated:
          type: boolean
          description: Client created flag
        OnBehalfOfObOrganisation:
          type: string
          description: A reference to fourth party organisation resource on the OB Directory if the registering TPP is acting on behalf of another
          maxLength: 40
        PolicyUri:
          type: string
          format: uri
          description: The Software Statement policy RFC-3986-compliant URI
          maxLength: 256
        ClientUri:
          type: string
          format: uri
          description: The Software Statement client RFC-3986-compliant URI
          maxLength: 256
        LogoUri:
          type: string
          format: uri
          description: The Software Statement logo RFC-3986-compliant URI
          maxLength: 256
        RedirectUri:
          type: array
          items:
            type: string
            format: uri
          description: The Software Statement redirect RFC-3986-compliant URI
          maxLength: 256
        Roles:
          type: array
          items:
            type: string
            maxLength: 256
          description: The list of Software Statement roles
        SigningKeyIds:
          type: array
          items:
            type: string
          description: The list of signing certificate Ids
        TermsOfServiceUri:
          type: string
          format: uri
          description: The Software Statement terms of service RFC-3986-compliant URI
          maxLength: 256
        TransportKeyIds:
          type: array
          items:
            type: string
          description: The list of transport certificate Ids
        Version:
          type: number
          description: Software Statement version as provided by the organisation's PTC
    SoftwareStatementAssertionSchema:
      type: string
      description: A signed JWT (JWS)
    SoftwareStatementsSchema:
      type: array
      items:
        $ref: '#/components/schemas/SoftwareStatementSchema'
      description: The list of Software Statements
    SoftwareStatementIdSchema:
      type: string
      description: Software Statement Id
      maxLength: 22
    SoftwareStatementStateSchema:
      type: object
      properties:
        Active:
          type: boolean
          enum:
            - true
            - false
      description: Software Statement State
    SoftwareStatementRedirectURISchema:
      description: Array of Redirection RFC-3986-compliant URI values used by the Client, as supplied by the client
      type: array
      items:
        type: string
        format: uri
        minItems: 1
    UniqueRequestIdSchema:
      type: string
      description: Unique Request Id. Give it to the Support Desk if you eve need help with a request that does not work the way you expected.
  securitySchemes:
    OAuth2SecurityReadOps:
      description: This API uses OAuth 2 with the client credentials grant flow
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://sso.openbanking.me.uk/as/token.oauth2
          scopes:
            TPPReadAccess: Retrieve or Search for Third Party Providers
            ASPSPReadAccess: Read ASPSP Records
    OAuth2SecurityReadWriteOps:
      description: This API uses OAuth 2 with the client credentials grant flow
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://sso.openbanking.me.uk/as/token.oauth2
          scopes:
            TPPReadAccess: Retrieve or Search for Third Party Providers
            TPPModify: Modify Your Third Third Party Provider Record
            ASPSPReadAccess: Read ASPSP Records